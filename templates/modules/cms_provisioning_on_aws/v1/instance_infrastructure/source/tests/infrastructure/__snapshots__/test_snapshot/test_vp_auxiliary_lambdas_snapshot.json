{
  "Parameters": {
    "customresourcelambdadependencylayerarnParameter": {
      "Default": "/dev/cms-provisioning-on-aws-stack-dev/arns/dependency-layer-arn",
      "Type": "AWS::SSM::Parameter::Value<String>"
    },
    "rotatesecretlambdadependencylayerarnParameter": {
      "Default": "/dev/cms-provisioning-on-aws-stack-dev/arns/dependency-layer-arn",
      "Type": "AWS::SSM::Parameter::Value<String>"
    }
  },
  "Resources": {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "Type": "AWS::Lambda::Function"
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "customresourcelambda36A756E1": {
      "DependsOn": [
        "customresourcelambdaroleC4C9724F"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Description": "CMS provisioning custom resource lambda function",
        "Environment": {
          "Variables": {
            "USER_AGENT_STRING": "AWSSOLUTION/SO0241/v1.0.0 AWSSOLUTION-CAPABILITY/CMS.5/v1.0.0"
          }
        },
        "FunctionName": "cms-provisioning-on-aws-stack-dev-custom-resource-lambda",
        "Handler": "custom_resource.custom_resource.handler",
        "Layers": [
          {
            "Ref": "customresourcelambdadependencylayerarnParameter"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "customresourcelambdaroleC4C9724F",
            "Arn"
          ]
        },
        "Runtime": "python3.10",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "customresourcelambdaLogRetention52EA8627": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "customresourcelambda36A756E1"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "customresourcelambdaarnBB676D6F": {
      "Properties": {
        "Description": "Arn for lambda function that services custom resources",
        "Name": "/dev/cms-provisioning-on-aws-stack-dev/arns/custom-resource-lambda-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "customresourcelambda36A756E1",
            "Arn"
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "customresourcelambdaroleC4C9724F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":lambda:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":function:",
                        {
                          "Ref": "rotatesecretlambdaA64FDED8"
                        }
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "lambda-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "iot:CreateKeysAndCertificate",
                    "iot:UpdateEventConfigurations"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "iot:DeleteCertificate",
                    "iot:UpdateCertificate"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":cert/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "iot:ListTargetsForPolicy",
                    "iot:DetachPolicy"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":iot:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":policy/claim-certificate-provisioning-policy"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":iot:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":cert/*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "iot-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:RotateSecret"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":secretsmanager:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":secret:dev/cms-provisioning-on-aws-stack-dev/provisioning-credentials*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "secretsmanager:CreateSecret",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":secretsmanager:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":secret:*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "secrets-manager-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-provisioning-on-aws-stack-dev-custom-resource-lambda"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-provisioning-on-aws-stack-dev-custom-resource-lambda:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-policy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "rotatesecretlambdaA64FDED8": {
      "DependsOn": [
        "rotatesecretlambdarole4F0054A8"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Description": "CMS provisioning rotate secrets lambda function",
        "Environment": {
          "Variables": {
            "CLAIM_CERT_PROVISIONING_POLICY_NAME": "claim-certificate-provisioning-policy",
            "USER_AGENT_STRING": "AWSSOLUTION/SO0241/v1.0.0 AWSSOLUTION-CAPABILITY/CMS.5/v1.0.0"
          }
        },
        "FunctionName": "cms-provisioning-on-aws-stack-dev-rotate-secret-lambda",
        "Handler": "rotate_secret.rotate_secret.handler",
        "Layers": [
          {
            "Ref": "rotatesecretlambdadependencylayerarnParameter"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "rotatesecretlambdarole4F0054A8",
            "Arn"
          ]
        },
        "Runtime": "python3.10",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "rotatesecretlambdaLogRetention45B449D5": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "rotatesecretlambdaA64FDED8"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "rotatesecretlambdaarn64627AFE": {
      "Properties": {
        "Description": "Arn for lambda function that rotates secrets",
        "Name": "/dev/cms-provisioning-on-aws-stack-dev/arns/rotate-secret-lambda-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "rotatesecretlambdaA64FDED8",
            "Arn"
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "rotatesecretlambdarole4F0054A8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:PutSecretValue",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:UpdateSecretVersionStage"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":secretsmanager:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":secret:dev/cms-provisioning-on-aws-stack-dev/provisioning-credentials*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "secrets-manager-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "iot:UpdateCertificate",
                    "iot:DeleteCertificate",
                    "iot:ListAttachedPolicies"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":cert/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "iot:AttachPolicy",
                    "iot:DetachPolicy"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":iot:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":cert/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":iot:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":policy/claim-certificate-provisioning-policy"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Action": [
                    "iot:CreateKeysAndCertificate",
                    "iot:RegisterCertificateWithoutCA"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "iot-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-provisioning-on-aws-stack-dev-rotate-secret-lambda"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-provisioning-on-aws-stack-dev-rotate-secret-lambda:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-policy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "rotatesecretlambdasecretsmanagerinvokerotatesecretlambdapermissionC3A549B1": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "rotatesecretlambdaA64FDED8",
            "Arn"
          ]
        },
        "Principal": "secretsmanager.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Type": "AWS::Lambda::Permission"
    }
  }
}
