{
  "Parameters": {
    "initialconnectioonlambdadependencylayerarnParameter": {
      "Default": "/dev/cms-provisioning-on-aws-stack-dev/arns/dependency-layer-arn",
      "Type": "AWS::SSM::Parameter::Value<String>"
    },
    "postprovisioninglambdadependencylayerarnParameter": {
      "Default": "/dev/cms-provisioning-on-aws-stack-dev/arns/dependency-layer-arn",
      "Type": "AWS::SSM::Parameter::Value<String>"
    },
    "preprovisioningdependencylayerarnParameter": {
      "Default": "/dev/cms-provisioning-on-aws-stack-dev/arns/dependency-layer-arn",
      "Type": "AWS::SSM::Parameter::Value<String>"
    }
  },
  "Resources": {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "Type": "AWS::Lambda::Function"
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "authorizedvehiclestable84CD66D5": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "vin",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "vin",
            "KeyType": "HASH"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "SSESpecification": {
          "KMSMasterKeyId": {
            "Fn::GetAtt": [
              "authorizedvehiclestablekmskey59E2E265",
              "Arn"
            ]
          },
          "SSEEnabled": true,
          "SSEType": "KMS"
        }
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain"
    },
    "authorizedvehiclestablearnvalue52893777": {
      "Properties": {
        "Description": "Table arn for the authorized vehicles table",
        "Name": "/dev/cms-provisioning-on-aws-stack-dev/arns/authorized-vehicles-table-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "authorizedvehiclestable84CD66D5",
            "Arn"
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "authorizedvehiclestableencyrptionkeyarnvalue737B8563": {
      "Properties": {
        "Description": "Encryption key arn for the authorized vehicles table",
        "Name": "/dev/cms-provisioning-on-aws-stack-dev/arns/authorized-vehicles-encryption-key-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "authorizedvehiclestablekmskey59E2E265",
            "Arn"
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "authorizedvehiclestablekmskey59E2E265": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain"
    },
    "authorizedvehiclestablenameF784BDF2": {
      "Properties": {
        "Description": "Table name for the authorized vehicles table",
        "Name": "/dev/cms-provisioning-on-aws-stack-dev/table-names/authorized-vehicles-table-name",
        "Type": "String",
        "Value": {
          "Ref": "authorizedvehiclestable84CD66D5"
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "initialconnectionlambda5906F603": {
      "DependsOn": [
        "initialconnectionlambdarole98FD30F6"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Description": "Vehicle Provisioning Initial Connection Function",
        "Environment": {
          "Variables": {
            "PROVISIONED_VEHICLES_TABLE_NAME": {
              "Ref": "provisionedvehiclestable1D94D49A"
            },
            "USER_AGENT_STRING": "AWSSOLUTION/SO0241/v1.0.0 AWSSOLUTION-CAPABILITY/CMS.5/v1.0.0"
          }
        },
        "FunctionName": "cms-provisioning-on-aws-stack-dev-initial-connection-lambda",
        "Handler": "provisioning.initial_connection.handler",
        "Layers": [
          {
            "Ref": "initialconnectioonlambdadependencylayerarnParameter"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "initialconnectionlambdarole98FD30F6",
            "Arn"
          ]
        },
        "Runtime": "python3.10",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "initialconnectionlambdaLogRetention4E4C42EA": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "initialconnectionlambda5906F603"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "initialconnectionlambdaiotinvokeinitialconnectionlambdapermissionEB06CB00": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "initialconnectionlambda5906F603",
            "Arn"
          ]
        },
        "Principal": "iot.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "initialconnectionlambdarole98FD30F6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-provisioning-on-aws-stack-dev-initial-connection-lambda"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-provisioning-on-aws-stack-dev-initial-connection-lambda:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-logs-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "dynamodb:UpdateItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/",
                        {
                          "Ref": "provisionedvehiclestable1D94D49A"
                        }
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":kms:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":key/",
                        {
                          "Ref": "provisionedvehiclestablekmskeyD9F868C1"
                        }
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dynamodb-provisioned-vehicles-policy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "iotinitialconnectionlambdarule": {
      "Properties": {
        "RuleName": "iot_initial_connection_lambda_rule",
        "TopicRulePayload": {
          "Actions": [
            {
              "Lambda": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "initialconnectionlambda5906F603",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "Description": "Trigger lambda to updated ProvisionedVehicles record on vehicle initial connection.",
          "Sql": "SELECT * FROM 'vehicleactive/#'"
        }
      },
      "Type": "AWS::IoT::TopicRule"
    },
    "iotpostprovisioninglambdarule": {
      "Properties": {
        "RuleName": "iot_post_provisioning_lambda_rule",
        "TopicRulePayload": {
          "Actions": [
            {
              "Lambda": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "postprovisioninghooklambdaFEE7EB16",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "Description": "Trigger lambda to insert ProvisionedVehicles record on successful thing creation or update (triggered by RegisterThing).",
          "Sql": "SELECT * FROM '$aws/events/thing/+/+'"
        }
      },
      "Type": "AWS::IoT::TopicRule"
    },
    "postprovisionhooklambdarole61DE046E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "iot:DetachPolicy",
                    "iot:DeleteCertificate"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":cert/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "iot:ListAttachedPolicies",
                    "iot:ListCertificates",
                    "iot:DetachThingPrincipal"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "iot-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-provisioning-on-aws-stack-dev-post-provisioning-lambda"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-provisioning-on-aws-stack-dev-post-provisioning-lambda:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-logs-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:UpdateItem"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/",
                        {
                          "Ref": "provisionedvehiclestable1D94D49A"
                        }
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":kms:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":key/",
                        {
                          "Ref": "provisionedvehiclestablekmskeyD9F868C1"
                        }
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dynamodb-provisioned-vehicles-policy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "postprovisioninghooklambdaFEE7EB16": {
      "DependsOn": [
        "postprovisionhooklambdarole61DE046E"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Description": "Vehicle Provisioning Post-Provisioning Function",
        "Environment": {
          "Variables": {
            "PROVISIONED_VEHICLES_TABLE_NAME": {
              "Ref": "provisionedvehiclestable1D94D49A"
            },
            "PROVISIONING_TEMPLATE_NAME": "cms-vehicle-provisioning-template",
            "USER_AGENT_STRING": "AWSSOLUTION/SO0241/v1.0.0 AWSSOLUTION-CAPABILITY/CMS.5/v1.0.0"
          }
        },
        "FunctionName": "cms-provisioning-on-aws-stack-dev-post-provisioning-lambda",
        "Handler": "provisioning.post_provision.handler",
        "Layers": [
          {
            "Ref": "postprovisioninglambdadependencylayerarnParameter"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "postprovisionhooklambdarole61DE046E",
            "Arn"
          ]
        },
        "Runtime": "python3.10",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "postprovisioninghooklambdaLogRetention492CC519": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "postprovisioninghooklambdaFEE7EB16"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "postprovisioninghooklambdaiotinvokepostprovisioninglambdapermissionAF265FEB": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "postprovisioninghooklambdaFEE7EB16",
            "Arn"
          ]
        },
        "Principal": "iot.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "preprovisionhooklambdaroleA335E9BB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "iot:UpdateCertificate",
                    "iot:DeleteCertificate"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":cert/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "iot-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-provisioning-on-aws-stack-dev-pre-provisioning-lambda"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-provisioning-on-aws-stack-dev-pre-provisioning-lambda:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-logs-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/",
                        {
                          "Ref": "provisionedvehiclestable1D94D49A"
                        }
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":kms:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":key/",
                        {
                          "Ref": "provisionedvehiclestablekmskeyD9F868C1"
                        }
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dynamodb-provisioned-vehicles-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "dynamodb:GetItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/",
                        {
                          "Ref": "authorizedvehiclestable84CD66D5"
                        }
                      ]
                    ]
                  }
                },
                {
                  "Action": "kms:Decrypt",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":kms:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":key/",
                        {
                          "Ref": "authorizedvehiclestablekmskey59E2E265"
                        }
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dynamodb-authorized-vehicles-policy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "preprovisioninghooklambda4E86FF3A": {
      "DependsOn": [
        "preprovisionhooklambdaroleA335E9BB"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Description": "Vehicle Provisioning Pre-Provisioning Hook",
        "Environment": {
          "Variables": {
            "AUTHORIZED_VEHICLES_TABLE_NAME": {
              "Ref": "authorizedvehiclestable84CD66D5"
            },
            "PROVISIONED_VEHICLES_TABLE_NAME": {
              "Ref": "provisionedvehiclestable1D94D49A"
            },
            "USER_AGENT_STRING": "AWSSOLUTION/SO0241/v1.0.0 AWSSOLUTION-CAPABILITY/CMS.5/v1.0.0"
          }
        },
        "FunctionName": "cms-provisioning-on-aws-stack-dev-pre-provisioning-lambda",
        "Handler": "provisioning.pre_provision.handler",
        "Layers": [
          {
            "Ref": "preprovisioningdependencylayerarnParameter"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "preprovisionhooklambdaroleA335E9BB",
            "Arn"
          ]
        },
        "Runtime": "python3.10",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "preprovisioninghooklambdaLogRetention6119860B": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "preprovisioninghooklambda4E86FF3A"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "preprovisioninghooklambdaiotinvokepreprovisioninglambdapermissionA501594A": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "preprovisioninghooklambda4E86FF3A",
            "Arn"
          ]
        },
        "Principal": "iot.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "preprovisioninglambdaarnvalue2651B102": {
      "Properties": {
        "Description": "Arn for the pre provisioning lambda function",
        "Name": "/dev/cms-provisioning-on-aws-stack-dev/arns/pre-provisioning-lambda-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "preprovisioninghooklambda4E86FF3A",
            "Arn"
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "provisionedvehiclestable1D94D49A": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "vin",
            "AttributeType": "S"
          },
          {
            "AttributeName": "certificate_id",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "vin",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "certificate_id",
            "KeyType": "RANGE"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "SSESpecification": {
          "KMSMasterKeyId": {
            "Fn::GetAtt": [
              "provisionedvehiclestablekmskeyD9F868C1",
              "Arn"
            ]
          },
          "SSEEnabled": true,
          "SSEType": "KMS"
        }
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain"
    },
    "provisionedvehiclestablekmskeyD9F868C1": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain"
    }
  }
}
