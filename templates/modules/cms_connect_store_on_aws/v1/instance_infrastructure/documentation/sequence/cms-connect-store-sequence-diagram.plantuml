@startuml cms-connect-store-sequence-diagram
'Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
'SPDX-License-Identifier: MIT (For details, see https://github.com/awslabs/aws-icons-for-plantuml/blob/master/LICENSE)

!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v15.0/dist
!include AWSPuml/AWSCommon.puml
!include AWSPuml/Compute/Lambda.puml
!include AWSPuml/InternetOfThings/IoTMQTTProtocol.puml
!include AWSPuml/InternetOfThings/IoTRule.puml
!include AWSPuml/Storage/SimpleStorageService.puml
!include AWSPuml/Analytics/KinesisDataStreams.puml
!include AWSPuml/Analytics/Glue.puml
!include AWSPuml/SecurityIdentityCompliance/SecretsManager.puml
!include AWSPuml/General/GenericApplication.puml

'Comment out to use default PlantUML sequence formatting
skinparam participant {
    BackgroundColor AWS_BG_COLOR
    BorderColor AWS_BORDER_COLOR
}
skinparam sequence {
    ArrowThickness 2
    LifeLineBorderColor AWS_COLOR
    LifeLineBackgroundColor AWS_BORDER_COLOR
    BoxBorderColor AWS_COLOR
}

entity Vehicle as veh
box AWS Cloud
participant "$IoTMQTTProtocolIMG()\nCMS MQTT Topics" as iot << IoT Core >>
participant "$IoTRuleIMG()\nIoT S3 Rule" as s3rule << IoT Rule >>
participant "$IoTRuleIMG()\nIoT Kinesis Rule" as kinesisrule << IoT Rule >>
participant "$KinesisDataStreamsIMG()\nKinesis Delivery Stream" as kinesisds << Kinesis >>
participant "$GlueIMG()\nGlue" as glue << Glue >>
participant "$SimpleStorageServiceIMG()\nS3" as s3 << S3 >>
participant "$IoTRuleIMG()\nIoT Vehicle Alarm Rule" as vehiclealarmrule << IoT Rule >>
participant "$LambdaIMG()\nLambda Vehicle Alarm" as lambdavehiclealarm <<Lambda>>
participant "$SecretsManagerIMG()\nSecrets Manager" as secretsmanager << SecretsManager >>
endbox

box External Resources
participant "$GenericApplicationIMG()\nUser Authentication Resource" as userauthresource << UserAuthResource >>
participant "$GenericApplicationIMG()\nAlerts Resource" as alertsresource << AlertsResource >>
endbox


'Use shortcut syntax for activation with colored lifelines and return keyword
veh -> iot: emit payload async
activate iot #248823
iot --> veh
iot -> s3: record to audit bucket
activate s3 #248823
return
|||
iot -> s3rule: invoke s3 rule
activate s3rule #248823
iot -> kinesisrule: invoke \t\t\nkinesis\t\t\nrule    \t\t
activate kinesisrule #248823
iot -> vehiclealarmrule: invoke vehicle \ntrigger alarm \nrule
deactivate iot
activate vehiclealarmrule #248823
|||
s3 <- s3rule: store payload in JSON format in CMS root \nbucket
activate s3 #248823
return
deactivate s3rule
kinesisrule -> kinesisds: send payload to delivery stream
activate kinesisds #A020F0
kinesisds -> glue: validate against VSS schema
activate glue #A020F0
kinesisds <-- glue
kinesisds -> glue: transform to Parquet format
return
s3 <- kinesisds: store payload in Parquet format in CMS root bucket
activate s3 #248823
return
|||
return
deactivate kinesisrule
|||
vehiclealarmrule -> lambdavehiclealarm: trigger vehicle alarm lambda
deactivate vehiclealarmrule
activate lambdavehiclealarm #f58027
lambdavehiclealarm -> secretsmanager: fetch client credentials
activate secretsmanager #d01c27
lambdavehiclealarm <-- secretsmanager
deactivate secretsmanager
lambdavehiclealarm -> userauthresource: exchange client credentials for access token
activate userauthresource #0079d6
lambdavehiclealarm <-- userauthresource
deactivate userauthresource
lambdavehiclealarm -> alertsresource: make a post request to alerts api with alarm
activate alertsresource #0079d6
lambdavehiclealarm <-- alertsresource
deactivate lambdavehiclealarm
@enduml
