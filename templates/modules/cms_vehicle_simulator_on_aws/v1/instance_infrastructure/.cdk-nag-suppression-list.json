{
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/cloudfront-stack/cloudfront-construct/log-bucket/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-S1",
                "reason": "A logs bucket does not need another S3 bucket for logs"
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/cloudfront-stack/cloudfront-construct/distribution/CloudFrontDistribution/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-CFR1",
                "reason": "Not providing geo restriction functionality for vehicle simulator"
            },
            {
                "id": "AwsSolutions-CFR4",
                "reason": "Since the distribution uses the CloudFront domain name, CloudFront automatically sets the security policy to TLSv1 regardless of the value of MinimumProtocolVersion"
            },
            {
                "id": "AwsSolutions-CFR2",
                "reason": "Ignore Web Application Firewall for now"
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/cognito-stack/cognito-construct/user-pool/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-COG2",
                "reason": "Vehicle Simulator does not require MFA because it does not handle customer data or communicate with the rest of the solution."
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/custom-resources-stack/custom-resources-construct/helper-lambda-role/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::cms-vehicle-simulator-on-aws-stack-dev-console-bucket-arn/*",
                    "Resource::cms-vehicle-simulator-on-aws-stack-dev-routes-bucket-arn/*"
                ],
                "reason": "s3:PutObject and s3:AbortMultipartUpload actions are allowed on any item within the mentioned buckets"
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:policy/*"
                ],
                "reason": "s3:PutObject and s3:AbortMultipartUpload actions are allowed on any item within the mentioned buckets"
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::*"
                ],
                "reason": "iot:DescribeEndpoint action does not allow resource specific permissions. iot:CreateThingGroup, iot:TagResource and iot:DetachPrincipalPolicy permissions are given to this helper lambda before creation of subsequent resources like the thing group, and vs-iot policy. As, these resources would be created in a nested stack which is dependendent on this stack we cannot give resource specific permissions right now."
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/cms-vehicle-simulator-on-aws-stack-dev-custom-resources-lambda:log-stream:*"
                ],
                "reason": "Log stream has to be a wildcard"
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/simulator-stack/AWS679f53fac002430cb0da5b7982bd2287/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-L1",
                "reason": "This lamdba is created by cdk to generate custom resources and we do not have control over it."
            },
            {
                "id": "AwsSolutions-IAM4",
                "appliesTo": [
                    "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "reason": "Lambda created by AwsCustomResource cannot be given custom permissions"
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/simulator-stack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM4",
                "appliesTo": [
                    "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "reason": "Lambda created by AwsCustomResource cannot be given custom permissions"
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/vs-api-stack/vs-api-lambda-role/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM5",
                "reason": "This lamdba needs permission to access all the 'things','certs', 'policy' and 'secrets' to identify and delete resources provioned by vehicle simulator. tags:GetResources action does not have option of resource level permissions",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:thing/*",
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:policy/*",
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:cert/*",
                    "Resource::arn:<AWS::Partition>:secretsmanager:<AWS::Region>:<AWS::AccountId>:secret:*"
                ]
            },
            {
                "id": "AwsSolutions-IAM5",
                "reason": "ListStateMachine action does not allow resource level permission. Execution permissions are only provided to the statemachine created by vehicle simulator",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:states:<AWS::Region>:<AWS::AccountId>:execution:<ssmstatemachinenameParameter>:*",
                    "Resource::arn:<AWS::Partition>:states:<AWS::Region>:<AWS::AccountId>:stateMachine:*"
                ]
            },
            {
                "id": "AwsSolutions-IAM5",
                "reason": "Actions tag:GetResources, iot:DetachThingPrincipal, iot:ListThings, iot:ListThingPrincipals, iot:ListPrincipalPolicies does not allow to choose a specific resource",
                "appliesTo": [
                    "Resource::*"
                ]
            },
            {
                "id": "AwsSolutions-IAM5",
                "reason": "We do not have arn or name of the lambda which will be created by Chalice, thus we cannot give resource specific permission for logs",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*"
                ]
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/simulator-stack/simulator-construct/simulator-engine-lambda-role/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:topic/cms/data/simulated/*"
                ],
                "reason": "Simulator lambda is allowed to publish to all iot topics with cms/data/simulated prefix on this account"
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/cms-vehicle-simulator-on-aws-stack-dev-simulator-lambda:log-stream:*"
                ],
                "reason": "Log stream has to be a wildcard"
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::cms-vehicle-simulator-on-aws-stack-dev-routes-bucket-arn/*"
                ],
                "reason": "GetObject action requires resource wildcard to access all objects in bucket"
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/simulator-stack/simulator-construct/simulator-engine-lambda-role/DefaultPolicy/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Action::s3:GetBucket*",
                    "Action::s3:GetObject*",
                    "Action::s3:List*",
                    "Resource::cms-vehicle-simulator-on-aws-stack-dev-routes-bucket-arn/*"
                ],
                "reason": "These actions are allowed for simulator lambda only for all items in the provided bucket"
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/simulator-stack/simulator-construct/provisioning-lambda-role/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::<simulatorconstructprovisioningbucketEBD82590.Arn>/*"
                ],
                "reason": "The four actions s3:DeleteObject, s3:GetObject, s3:PutObject, s3:PutObjectAcl are allowed on all items inside the provisioning bucket"
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::*"
                ],
                "reason": "Actions iot:CreateKeysAndCertificate and iot:AttachThingPrincipal does not support resource specific permission"
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:thing/*",
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:thinggroup/*"
                ],
                "reason": "Actions iot:CreateThing, iot:DescrieThing and iot:AddThingToThingGroup are allowed to create any new thing and add it to any thing group. The lambda itself is protected by policies which only allowed users authenticated via cognito userpool to use it and hence lambda will always only perform resources created by itself."
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:policy/*"
                ],
                "reason": "Actions iot:CreatePolicy is allowed to create new policies. The lambda itself is protected by policies which only allowed users authenticated via cognito userpool to use it and hence lambda will always only perform resources created by itself."
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:cert/*"
                ],
                "reason": "Actions iot:AttachPolicy is allowed to certify any resource in iot core. The lambda itself is protected by policies which only allowed users authenticated via cognito userpool to use it and hence lambda will always only perform resources created by itself."
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:secretsmanager:<AWS::Region>:<AWS::AccountId>:secret:*"
                ],
                "reason": "Actions secretsmanager:CreateSecret and secretsmanager:TagResource are allowed to create new secrets and tag them. The lambda itself is protected by policies which only allowed users authenticated via cognito userpool to use it and hence lambda will always only perform resources created by itself."
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/cms-vehicle-simulator-on-aws-stack-dev-provisioning-lambda:log-stream:*"
                ],
                "reason": "Log stream has to be a wildcard"
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/simulator-stack/simulator-construct/cleanup-lambda-role/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::<simulatorconstructprovisioningbucketEBD82590.Arn>/*"
                ],
                "reason": "The four actions s3:DeleteObject, s3:GetObject, s3:PutObject, s3:PutObjectAcl are allowed on all items within the provisioning bucket"
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:thing/*",
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:policy/*",
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:cert/*"
                ],
                "reason": "Delete actions are allowed to delete thing, policy and cert. The lambda itself is protected by policies which only allowed users authenticated via cognito userpool to use it and hence lambda will always only perform resources created by itself."
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:secretsmanager:<AWS::Region>:<AWS::AccountId>:secret:vs-device/*"
                ],
                "reason": "Delete secret is allowed for any resource with resource name starting with vs-device. The lambda itself is protected by policies which only allowed users authenticated via cognito userpool to use it and hence lambda will always only perform resources created by itself."
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::*"
                ],
                "reason": "tag:GetResources action does not allow resource specific permissions"
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/cms-vehicle-simulator-on-aws-stack-dev-cleanup-lambda:log-stream:*"
                ],
                "reason": "Log stream has to be a wildcard"
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/console-stack/console-construct/identity-pool-authenticated-role/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:execute-api:<AWS::Region>:<AWS::AccountId>:<restapiidParameter>/*"
                ],
                "reason": "An authenticated user is allowed to execute any of the api gateway resources for given rest api id"
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::*"
                ],
                "reason": "Only a user authenticated using cognito would be able to perform the iot:AttachPrincipalPolicy action. "
            },
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:topic/cms/data/simulated/*",
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:topicfilter/cms/data/simulated/*",
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:client/*",
                    "Resource::arn:<AWS::Partition>:iot:<AWS::Region>:<AWS::AccountId>:cert/*"
                ],
                "reason": "Authenticated user is allowed to perform iot:Connect, iot:Subscribe, iot:Receive actions"
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/console-stack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM4",
                "appliesTo": [
                    "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "reason": "Lambda created by BucketDeployment construct cannot be given custom policy"
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/console-stack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Action::s3:GetBucket*",
                    "Action::s3:GetObject*",
                    "Action::s3:List*",
                    "Resource::arn:<AWS::Partition>:s3:::cdk-hnb659fds-assets-<AWS::AccountId>-<AWS::Region>/*",
                    "Action::s3:Abort*",
                    "Action::s3:DeleteObject*",
                    "Resource::cms-vehicle-simulator-on-aws-stack-dev-console-bucket-arn/*"
                ],
                "reason": "Lambda created by BucketDeployment construct cannot be given custom policy"
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/simulator-stack/simulator-construct/iot-endpoint-custom-resource/CustomResourcePolicy/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::*"
                ],
                "reason": "iot:DescribeEndpoint action does not allow resource specific permissions"
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/simulator-stack/simulator-construct/simulator-statemachine-role/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::*",
                    "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:*"
                ],
                "reason": "LogDelivery and Xray actions do not support resource-level authorizations"
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/simulator-stack/simulator-construct/cloud-watch-logs-simulator-lambda-policy/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM5",
                "reason": "Log policy is only limited to lambdas which are part of cms-vehicle-simulator"
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/console-stack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-L1",
                "reason": "The lambda resource is defined by the CDKBucketDeployment construct."
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/custom-resources-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM4",
                "appliesTo": [
                    "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "reason": "Log retention lambda uses managed policies."
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/custom-resources-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::*"
                ],
                "reason": "Log retention lambda uses managed policies which have wildcard permissions."
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/simulator-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM4",
                "appliesTo": [
                    "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "reason": "Log retention lambda uses managed policies."
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/simulator-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-IAM5",
                "appliesTo": [
                    "Resource::*"
                ],
                "reason": "Log retention lambda uses managed policies which have wildcard permissions."
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/custom-resources-stack/custom-resources-construct/helper-lambda/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-L1",
                "reason": "Some libraries used throughout the solution are not yet supported in Python 3.11. For consistency, all lambdas are currently kept at Python 3.10. Future refactoring of unsupported libraries will enable the use of 3.11 throughout the solution."
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/simulator-stack/simulator-construct/provisioning-lambda/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-L1",
                "reason": "Some libraries used throughout the solution are not yet supported in Python 3.11. For consistency, all lambdas are currently kept at Python 3.10. Future refactoring of unsupported libraries will enable the use of 3.11 throughout the solution."
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/simulator-stack/simulator-construct/simulator-engine-lambda/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-L1",
                "reason": "Some libraries used throughout the solution are not yet supported in Python 3.11. For consistency, all lambdas are currently kept at Python 3.10. Future refactoring of unsupported libraries will enable the use of 3.11 throughout the solution."
            }
        ]
    },
    "/cms-vehicle-simulator-on-aws-stack-dev/cms-vehicle-simulator/simulator-stack/simulator-construct/cleanup-lambda/Resource": {
        "rules_to_suppress": [
            {
                "id": "AwsSolutions-L1",
                "reason": "Some libraries used throughout the solution are not yet supported in Python 3.11. For consistency, all lambdas are currently kept at Python 3.10. Future refactoring of unsupported libraries will enable the use of 3.11 throughout the solution."
            }
        ]
    }
}
