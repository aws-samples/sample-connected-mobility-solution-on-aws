{
  "Mappings": {
    "ServiceprincipalMap": {
      "af-south-1": {
        "states": "states.af-south-1.amazonaws.com"
      },
      "ap-east-1": {
        "states": "states.ap-east-1.amazonaws.com"
      },
      "ap-northeast-1": {
        "states": "states.ap-northeast-1.amazonaws.com"
      },
      "ap-northeast-2": {
        "states": "states.ap-northeast-2.amazonaws.com"
      },
      "ap-northeast-3": {
        "states": "states.ap-northeast-3.amazonaws.com"
      },
      "ap-south-1": {
        "states": "states.ap-south-1.amazonaws.com"
      },
      "ap-south-2": {
        "states": "states.ap-south-2.amazonaws.com"
      },
      "ap-southeast-1": {
        "states": "states.ap-southeast-1.amazonaws.com"
      },
      "ap-southeast-2": {
        "states": "states.ap-southeast-2.amazonaws.com"
      },
      "ap-southeast-3": {
        "states": "states.ap-southeast-3.amazonaws.com"
      },
      "ap-southeast-4": {
        "states": "states.ap-southeast-4.amazonaws.com"
      },
      "ca-central-1": {
        "states": "states.ca-central-1.amazonaws.com"
      },
      "cn-north-1": {
        "states": "states.cn-north-1.amazonaws.com"
      },
      "cn-northwest-1": {
        "states": "states.cn-northwest-1.amazonaws.com"
      },
      "eu-central-1": {
        "states": "states.eu-central-1.amazonaws.com"
      },
      "eu-central-2": {
        "states": "states.eu-central-2.amazonaws.com"
      },
      "eu-north-1": {
        "states": "states.eu-north-1.amazonaws.com"
      },
      "eu-south-1": {
        "states": "states.eu-south-1.amazonaws.com"
      },
      "eu-south-2": {
        "states": "states.eu-south-2.amazonaws.com"
      },
      "eu-west-1": {
        "states": "states.eu-west-1.amazonaws.com"
      },
      "eu-west-2": {
        "states": "states.eu-west-2.amazonaws.com"
      },
      "eu-west-3": {
        "states": "states.eu-west-3.amazonaws.com"
      },
      "il-central-1": {
        "states": "states.il-central-1.amazonaws.com"
      },
      "me-central-1": {
        "states": "states.me-central-1.amazonaws.com"
      },
      "me-south-1": {
        "states": "states.me-south-1.amazonaws.com"
      },
      "sa-east-1": {
        "states": "states.sa-east-1.amazonaws.com"
      },
      "us-east-1": {
        "states": "states.us-east-1.amazonaws.com"
      },
      "us-east-2": {
        "states": "states.us-east-2.amazonaws.com"
      },
      "us-gov-east-1": {
        "states": "states.us-gov-east-1.amazonaws.com"
      },
      "us-gov-west-1": {
        "states": "states.us-gov-west-1.amazonaws.com"
      },
      "us-iso-east-1": {
        "states": "states.amazonaws.com"
      },
      "us-iso-west-1": {
        "states": "states.amazonaws.com"
      },
      "us-isob-east-1": {
        "states": "states.amazonaws.com"
      },
      "us-west-1": {
        "states": "states.us-west-1.amazonaws.com"
      },
      "us-west-2": {
        "states": "states.us-west-2.amazonaws.com"
      }
    }
  },
  "Outputs": {
    "Exportcmsvehiclesimulatoronawsstackdeviotendpoint": {
      "Export": {
        "Name": "cms-vehicle-simulator-on-aws-stack-dev-iot-end-point"
      },
      "Value": {
        "Fn::GetAtt": [
          "simulatorconstructiotendpointcustomresourceF53734FE",
          "endpointAddress"
        ]
      }
    }
  },
  "Parameters": {
    "simulatorconstructssmdevicestypestablearnParameterFDFBF670": {
      "Default": "/dev/cms-vehicle-simulator-on-aws-stack-dev/dynamodb/devices-types-table-arn",
      "Type": "AWS::SSM::Parameter::Value<String>"
    },
    "simulatorconstructssmdevicestypestablenameParameterB5261128": {
      "Default": "/dev/cms-vehicle-simulator-on-aws-stack-dev/dynamodb/devices-types-table-name",
      "Type": "AWS::SSM::Parameter::Value<String>"
    },
    "simulatorconstructssmsimulationstablearnParameterEB1D3A2F": {
      "Default": "/dev/cms-vehicle-simulator-on-aws-stack-dev/dynamodb/simulations-table-arn",
      "Type": "AWS::SSM::Parameter::Value<String>"
    },
    "simulatorconstructssmsimulationstablenameParameterC2D1BAB4": {
      "Default": "/dev/cms-vehicle-simulator-on-aws-stack-dev/dynamodb/simulations-table-name",
      "Type": "AWS::SSM::Parameter::Value<String>"
    },
    "simulatorconstructssmsimulatordependencylayerarnParameter3752872E": {
      "Default": "/dev/cms-vehicle-simulator-on-aws-stack-dev/arns/dependency-layer-arn",
      "Type": "AWS::SSM::Parameter::Value<String>"
    },
    "simulatorconstructssmsolutionidParameter309B25A9": {
      "Default": "/dev/cms-vehicle-simulator-on-aws-stack-dev/solution/id",
      "Type": "AWS::SSM::Parameter::Value<String>"
    }
  },
  "Resources": {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 120
      },
      "Type": "AWS::Lambda::Function"
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "Type": "AWS::Lambda::Function"
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "simulatorconstructcleanuplambdaDB8FB70C": {
      "DependsOn": [
        "simulatorconstructcleanuplambdarole9704F5A7"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Description": "Provisioning Artifact Cleanup Function",
        "Environment": {
          "Variables": {
            "IOT_ENDPOINT": {
              "Fn::GetAtt": [
                "simulatorconstructiotendpointcustomresourceF53734FE",
                "endpointAddress"
              ]
            },
            "SEND_ANONYMOUS_METRIC": {
              "Fn::ImportValue": "cms-vehicle-simulator-on-aws-stack-dev-send-anonymous-usage"
            },
            "SIMULATOR_THING_GROUP_NAME": {
              "Fn::ImportValue": "cms-vehicle-simulator-on-aws-stack-dev-thing-group-name"
            },
            "SOLUTION_ID": {
              "Ref": "simulatorconstructssmsolutionidParameter309B25A9"
            },
            "USER_AGENT_STRING": "AWSSOLUTION/SO0241/v1.0.0 AWSSOLUTION-CAPABILITY/CMS.1/v1.0.0",
            "VERSION": {
              "Fn::ImportValue": "cms-vehicle-simulator-on-aws-stack-dev-solution-version"
            }
          }
        },
        "FunctionName": "cms-vehicle-simulator-on-aws-stack-dev-cleanup-lambda",
        "Handler": "stepfunction.handlers.cleanup_handler",
        "Layers": [
          {
            "Ref": "simulatorconstructssmsimulatordependencylayerarnParameter3752872E"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "simulatorconstructcleanuplambdarole9704F5A7",
            "Arn"
          ]
        },
        "Runtime": "python3.10",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "simulatorconstructcleanuplambdaLogRetention91247C21": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "simulatorconstructcleanuplambdaDB8FB70C"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "simulatorconstructcleanuplambdarole9704F5A7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iot:DeleteThing",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":thing/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "iot:DeletePolicy",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":policy/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "iot:DeleteCertificate",
                    "iot:DetachPolicy"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":cert/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "iot:DetachThingPrincipal",
                    "iot:ListThings",
                    "iot:ListThingPrincipals",
                    "iot:ListPrincipalPolicies"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "iot-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "secretsmanager:DeleteSecret",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":secretsmanager:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":secret:vs-device/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "secrets-manager-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "tag:GetResources",
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "tagging-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-vehicle-simulator-on-aws-stack-dev-cleanup-lambda"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-vehicle-simulator-on-aws-stack-dev-cleanup-lambda:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-logs-policy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "simulatorconstructiotendpointcustomresourceCustomResourcePolicyFC73182C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iot:DescribeEndpoint",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "simulatorconstructiotendpointcustomresourceCustomResourcePolicyFC73182C",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "simulatorconstructiotendpointcustomresourceF53734FE": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "simulatorconstructiotendpointcustomresourceCustomResourcePolicyFC73182C"
      ],
      "Properties": {
        "Create": "{\"action\":\"describeEndpoint\",\"service\":\"Iot\",\"parameters\":{\"endpointType\":\"iot:Data-ATS\"},\"physicalResourceId\":{\"responsePath\":\"endpointAddress\"}}",
        "InstallLatestAwsSdk": false,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        }
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete"
    },
    "simulatorconstructprovisioninglambdaAE2CCD63": {
      "DependsOn": [
        "simulatorconstructprovisioninglambdarole1427C166"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Description": "CMS Vehicle Simulator Provisioning Function",
        "Environment": {
          "Variables": {
            "IOT_ENDPOINT": {
              "Fn::GetAtt": [
                "simulatorconstructiotendpointcustomresourceF53734FE",
                "endpointAddress"
              ]
            },
            "SEND_ANONYMOUS_METRIC": {
              "Fn::ImportValue": "cms-vehicle-simulator-on-aws-stack-dev-send-anonymous-usage"
            },
            "SIMULATOR_THING_GROUP_NAME": {
              "Fn::ImportValue": "cms-vehicle-simulator-on-aws-stack-dev-thing-group-name"
            },
            "SOLUTION_ID": {
              "Ref": "simulatorconstructssmsolutionidParameter309B25A9"
            },
            "TOPIC_PREFIX": "cms/data/simulated",
            "USER_AGENT_STRING": "AWSSOLUTION/SO0241/v1.0.0 AWSSOLUTION-CAPABILITY/CMS.1/v1.0.0",
            "VERSION": {
              "Fn::ImportValue": "cms-vehicle-simulator-on-aws-stack-dev-solution-version"
            }
          }
        },
        "FunctionName": "cms-vehicle-simulator-on-aws-stack-dev-provisioning-lambda",
        "Handler": "stepfunction.handlers.provision_handler",
        "Layers": [
          {
            "Ref": "simulatorconstructssmsimulatordependencylayerarnParameter3752872E"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "simulatorconstructprovisioninglambdarole1427C166",
            "Arn"
          ]
        },
        "Runtime": "python3.10",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "simulatorconstructprovisioninglambdaLogRetentionC95FC7EA": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "simulatorconstructprovisioninglambdaAE2CCD63"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "simulatorconstructprovisioninglambdarole1427C166": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "iot:CreateKeysAndCertificate",
                    "iot:AttachThingPrincipal"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "iot:CreateThing",
                    "iot:DescribeThing"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":thing/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "iot:AddThingToThingGroup",
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":iot:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":thing/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":iot:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":thinggroup/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Action": "iot:CreatePolicy",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":policy/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "iot:AttachPolicy",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":cert/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "iot-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "secretsmanager:CreateSecret",
                    "secretsmanager:TagResource"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":secretsmanager:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":secret:*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "secrets-manager-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-vehicle-simulator-on-aws-stack-dev-provisioning-lambda"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-vehicle-simulator-on-aws-stack-dev-provisioning-lambda:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-logs-policy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "simulatorconstructsimulatorenginelambda7E595309": {
      "DependsOn": [
        "simulatorconstructsimulatorenginelambdarole5B3469D8"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Description": "CMS Vehicle Simulator Function",
        "Environment": {
          "Variables": {
            "IOT_ENDPOINT": {
              "Fn::GetAtt": [
                "simulatorconstructiotendpointcustomresourceF53734FE",
                "endpointAddress"
              ]
            },
            "ROUTE_BUCKET": {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::ImportValue": "cms-vehicle-simulator-on-aws-stack-dev-routes-bucket-arn"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "SEND_ANONYMOUS_METRIC": {
              "Fn::ImportValue": "cms-vehicle-simulator-on-aws-stack-dev-send-anonymous-usage"
            },
            "SIM_TABLE": {
              "Ref": "simulatorconstructssmsimulationstablenameParameterC2D1BAB4"
            },
            "SOLUTION_ID": {
              "Ref": "simulatorconstructssmsolutionidParameter309B25A9"
            },
            "TOPIC_PREFIX": "cms/data/simulated",
            "USER_AGENT_STRING": "AWSSOLUTION/SO0241/v1.0.0 AWSSOLUTION-CAPABILITY/CMS.1/v1.0.0",
            "VERSION": {
              "Fn::ImportValue": "cms-vehicle-simulator-on-aws-stack-dev-solution-version"
            }
          }
        },
        "FunctionName": "cms-vehicle-simulator-on-aws-stack-dev-simulator-lambda",
        "Handler": "stepfunction.handlers.data_sim_handler",
        "Layers": [
          {
            "Ref": "simulatorconstructssmsimulatordependencylayerarnParameter3752872E"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "simulatorconstructsimulatorenginelambdarole5B3469D8",
            "Arn"
          ]
        },
        "Runtime": "python3.10",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "simulatorconstructsimulatorenginelambdaLogRetentionDF8B301C": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "simulatorconstructsimulatorenginelambda7E595309"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "simulatorconstructsimulatorenginelambdarole5B3469D8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:GetObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::ImportValue": "cms-vehicle-simulator-on-aws-stack-dev-routes-bucket-arn"
                        },
                        "/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "s3-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "dynamodb:GetItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "simulatorconstructssmsimulationstablearnParameterEB1D3A2F"
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dynamodb-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iot:Publish",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":topic/cms/data/simulated/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "iot-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-vehicle-simulator-on-aws-stack-dev-simulator-lambda"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/cms-vehicle-simulator-on-aws-stack-dev-simulator-lambda:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-logs-policy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "simulatorconstructsimulatorstatemachine82555520": {
      "Properties": {
        "Description": "State machine name",
        "Name": "/dev/cms-vehicle-simulator-on-aws-stack-dev/names/simulator-state-machine-name",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "simulatorconstructstepfunctions58B8A6C7",
            "Name"
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "simulatorconstructsimulatorstatemachinearn8A52A535": {
      "Properties": {
        "Description": "State machine arn",
        "Name": "/dev/cms-vehicle-simulator-on-aws-stack-dev/arns/simulator-state-machine-arn",
        "Type": "String",
        "Value": {
          "Ref": "simulatorconstructstepfunctions58B8A6C7"
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "simulatorconstructsimulatorstatemachinerole0F18274D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region"
                    },
                    "states"
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogDelivery",
                    "logs:GetLogDelivery",
                    "logs:UpdateLogDelivery",
                    "logs:DeleteLogDelivery",
                    "logs:ListLogDeliveries"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-logs-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:PutResourcePolicy",
                    "logs:DescribeResourcePolicies",
                    "logs:DescribeLogGroups"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-logs-policy2"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "xray:GetSamplingRules",
                    "xray:GetSamplingTargets",
                    "xray:PutTelemetryRecords",
                    "xray:PutTraceSegments"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "xray-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "Lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "simulatorconstructsimulatorenginelambda7E595309",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "simulatorconstructprovisioninglambdaAE2CCD63",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "simulatorconstructcleanuplambdaDB8FB70C",
                        "Arn"
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "lambda-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "dynamodb:UpdateItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/",
                        {
                          "Ref": "simulatorconstructssmsimulationstablenameParameterC2D1BAB4"
                        }
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "sim-table-dynamodb-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "dynamodb:GetItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/",
                        {
                          "Ref": "simulatorconstructssmdevicestypestablenameParameterB5261128"
                        }
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "device-types-table-dynamodb-policy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "simulatorconstructstepfunctions58B8A6C7": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "simulatorconstructsimulatorstatemachinerole0F18274D"
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"get-device-type-map\",\"States\":{\"get-device-type-map\":{\"Type\":\"Map\",\"End\":true,\"Parameters\":{\"type_id.$\":\"$$.Map.Item.Value.type_id\",\"amount.$\":\"States.StringToJson($$.Map.Item.Value.amount)\",\"simulation.$\":\"$.simulation\"},\"Iterator\":{\"StartAt\":\"get-device-type-info\",\"States\":{\"get-device-type-info\":{\"Next\":\"device-pass\",\"Type\":\"Task\",\"ResultPath\":\"$.info\",\"ResultSelector\":{\"name.$\":\"$.Item.name\",\"topic.$\":\"$.Item.topic\",\"payload.$\":\"$.Item.payload\",\"simulation\":\"$.simulation\",\"amount\":\"$.amount\"},\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::dynamodb:getItem\",\"Parameters\":{\"Key\":{\"type_id\":{\"S.$\":\"$.type_id\"}},\"TableName\":\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::Select": [
                          5,
                          {
                            "Fn::Split": [
                              ":",
                              {
                                "Ref": "simulatorconstructssmdevicestypestablearnParameterFDFBF670"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "\",\"ConsistentRead\":false}},\"device-pass\":{\"Type\":\"Pass\",\"Parameters\":{\"amount_range.$\":\"States.ArrayRange(1,$.amount,1)\",\"info.$\":\"$.info\",\"simulation.$\":\"$.simulation\"},\"Next\":\"device-map\"},\"device-map\":{\"Type\":\"Map\",\"ResultPath\":null,\"Next\":\"cleanup-invoke\",\"Parameters\":{\"simulation.$\":\"$.simulation\",\"info.$\":\"$.info\",\"index.$\":\"$$.Map.Item.Index\"},\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"cleanup-invoke\"}],\"Iterator\":{\"StartAt\":\"provisioning-invoke\",\"States\":{\"provisioning-invoke\":{\"Next\":\"simulator-invoke\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"Done\"}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "simulatorconstructprovisioninglambdaAE2CCD63",
                  "Arn"
                ]
              },
              "\"},\"simulator-invoke\":{\"Next\":\"engine-choice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"ResultPath\":\"$.error\",\"Next\":\"update-sim-table\"}],\"Type\":\"Task\",\"ResultPath\":\"$.options\",\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "simulatorconstructsimulatorenginelambda7E595309",
                  "Arn"
                ]
              },
              "\"},\"engine-wait\":{\"Type\":\"Wait\",\"SecondsPath\":\"$.simulation.interval\",\"Next\":\"simulator-invoke\"},\"engine-choice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.simulation.duration\",\"NumericGreaterThanPath\":\"$.options.runtime\",\"Next\":\"engine-wait\"}],\"Default\":\"devicesRunning?\"},\"devicesRunning?\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.options.restart\",\"BooleanEquals\":true,\"Next\":\"simulator-invoke\"}],\"Default\":\"update-sim-table\"},\"update-sim-table\":{\"Next\":\"Done\",\"Catch\":[{\"ErrorEquals\":[\"DynamoDB.ConditionalCheckFailedException\"],\"Next\":\"Done\"}],\"Type\":\"Task\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::dynamodb:updateItem\",\"Parameters\":{\"Key\":{\"sim_id\":{\"S.$\":\"$.simulation.sim_id\"}},\"TableName\":\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::Select": [
                          5,
                          {
                            "Fn::Split": [
                              ":",
                              {
                                "Ref": "simulatorconstructssmsimulationstablearnParameterEB1D3A2F"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "\",\"ConditionExpression\":\"attribute_exists(sim_id)\",\"ExpressionAttributeValues\":{\":stage\":{\"S\":\"sleeping\"},\":time\":{\"S.$\":\"$$.State.EnteredTime\"}},\"UpdateExpression\":\"SET stage = :stage, updatedAt = :time\"}},\"Done\":{\"Type\":\"Succeed\"}}},\"ItemsPath\":\"$.amount_range\",\"MaxConcurrency\":0},\"cleanup-invoke\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "simulatorconstructcleanuplambdaDB8FB70C",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\"}}}},\"ItemsPath\":\"$.simulation.devices\",\"MaxConcurrency\":0}}}"
            ]
          ]
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "simulatorconstructstepfunctionsloggroupF393F631",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "IncludeExecutionData": false,
          "Level": "ALL"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "simulatorconstructsimulatorstatemachinerole0F18274D",
            "Arn"
          ]
        },
        "TracingConfiguration": {
          "Enabled": true
        }
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete"
    },
    "simulatorconstructstepfunctionsloggroupF393F631": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "simulatorconstructvssimulatorloggroupkmskey9B9D377D",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/vendedlogs/states",
              {
                "Ref": "AWS::StackName"
              },
              "vs-simulatorstate-machine-log-",
              {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "AWS::StackId"
                      }
                    ]
                  }
                ]
              }
            ]
          ]
        },
        "RetentionInDays": 90
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain"
    },
    "simulatorconstructvssimulatorloggroupkmskey9B9D377D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:GenerateDataKey"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "logs.",
                      {
                        "Ref": "AWS::Region"
                      },
                      ".amazonaws.com"
                    ]
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain"
    },
    "simulatorconstructvssimulatorloggroupkmskeyAlias9AAD5822": {
      "Properties": {
        "AliasName": "alias/vs-simulator-log-group-kms-key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "simulatorconstructvssimulatorloggroupkmskey9B9D377D",
            "Arn"
          ]
        }
      },
      "Type": "AWS::KMS::Alias"
    }
  }
}
