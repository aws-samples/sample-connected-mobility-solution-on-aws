{
  "Conditions": {
    "cmsconfigSendAnonymousUsage2AEBF069": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "Solution",
            "Config",
            "SendAnonymousUsage"
          ]
        },
        "Yes"
      ]
    }
  },
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs22.x"
      },
      "ap-east-1": {
        "value": "nodejs22.x"
      },
      "ap-east-2": {
        "value": "nodejs22.x"
      },
      "ap-northeast-1": {
        "value": "nodejs22.x"
      },
      "ap-northeast-2": {
        "value": "nodejs22.x"
      },
      "ap-northeast-3": {
        "value": "nodejs22.x"
      },
      "ap-south-1": {
        "value": "nodejs22.x"
      },
      "ap-south-2": {
        "value": "nodejs22.x"
      },
      "ap-southeast-1": {
        "value": "nodejs22.x"
      },
      "ap-southeast-2": {
        "value": "nodejs22.x"
      },
      "ap-southeast-3": {
        "value": "nodejs22.x"
      },
      "ap-southeast-4": {
        "value": "nodejs22.x"
      },
      "ap-southeast-5": {
        "value": "nodejs22.x"
      },
      "ap-southeast-7": {
        "value": "nodejs22.x"
      },
      "ca-central-1": {
        "value": "nodejs22.x"
      },
      "ca-west-1": {
        "value": "nodejs22.x"
      },
      "cn-north-1": {
        "value": "nodejs22.x"
      },
      "cn-northwest-1": {
        "value": "nodejs22.x"
      },
      "eu-central-1": {
        "value": "nodejs22.x"
      },
      "eu-central-2": {
        "value": "nodejs22.x"
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x"
      },
      "eu-north-1": {
        "value": "nodejs22.x"
      },
      "eu-south-1": {
        "value": "nodejs22.x"
      },
      "eu-south-2": {
        "value": "nodejs22.x"
      },
      "eu-west-1": {
        "value": "nodejs22.x"
      },
      "eu-west-2": {
        "value": "nodejs22.x"
      },
      "eu-west-3": {
        "value": "nodejs22.x"
      },
      "il-central-1": {
        "value": "nodejs22.x"
      },
      "me-central-1": {
        "value": "nodejs22.x"
      },
      "me-south-1": {
        "value": "nodejs22.x"
      },
      "mx-central-1": {
        "value": "nodejs22.x"
      },
      "sa-east-1": {
        "value": "nodejs22.x"
      },
      "us-east-1": {
        "value": "nodejs22.x"
      },
      "us-east-2": {
        "value": "nodejs22.x"
      },
      "us-gov-east-1": {
        "value": "nodejs22.x"
      },
      "us-gov-west-1": {
        "value": "nodejs22.x"
      },
      "us-iso-east-1": {
        "value": "nodejs18.x"
      },
      "us-iso-west-1": {
        "value": "nodejs18.x"
      },
      "us-isob-east-1": {
        "value": "nodejs18.x"
      },
      "us-isob-west-1": {
        "value": "nodejs18.x"
      },
      "us-west-1": {
        "value": "nodejs22.x"
      },
      "us-west-2": {
        "value": "nodejs22.x"
      }
    },
    "Solution": {
      "AssetsConfig": {
        "S3AssetBucketBaseName": "test-bucket-base-name",
        "S3AssetKeyPrefix": "test-object-key-prefix"
      },
      "Config": {
        "SendAnonymousUsage": "Yes"
      }
    }
  },
  "Parameters": {
    "AppUniqueId": {
      "AllowedPattern": "^(?!-)[a-z0-9-]+(?<!-)$",
      "ConstraintDescription": "AppUniqueId must contain min 3 and max 10 characters, and contain only lowercase alphanumeric characters and dashes.",
      "Description": "Application unique identifier used to uniquely name resources within the stack.",
      "MaxLength": 10,
      "MinLength": 3,
      "Type": "String"
    },
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>"
    },
    "IdentityProviderId": {
      "ConstraintDescription": "The identity provider ID must be a minimum of 3 characters.",
      "Default": "cms",
      "Description": "The ID associated with the identity provider configurations used for validation and exchange.",
      "MinLength": 3,
      "Type": "String"
    },
    "VpcName": {
      "Type": "String"
    }
  },
  "Resources": {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "test"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn"
          ]
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region"
            },
            "value"
          ]
        },
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          }
        ],
        "Timeout": 900
      },
      "Type": "AWS::Lambda::Function"
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "appregistryconstructappregistryapplicationAC1A319B": {
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-",
              {
                "Ref": "AWS::Region"
              },
              "-",
              {
                "Ref": "AWS::AccountId"
              }
            ]
          ]
        }
      },
      "Type": "AWS::ServiceCatalogAppRegistry::Application"
    },
    "appregistryconstructappregistryapplicationattributeassociation802A10B5": {
      "Properties": {
        "Application": {
          "Fn::GetAtt": [
            "appregistryconstructappregistryapplicationAC1A319B",
            "Id"
          ]
        },
        "AttributeGroup": {
          "Fn::GetAtt": [
            "appregistryconstructdefaultapplicationattributes8FF6B3DB",
            "Id"
          ]
        }
      },
      "Type": "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation"
    },
    "appregistryconstructdefaultapplicationattributes8FF6B3DB": {
      "Properties": {
        "Attributes": {
          "ApplicationType": "test-application-type",
          "SolutionID": "test-solution-id",
          "SolutionName": "test-solution-name",
          "Version": "test-solution-version"
        },
        "Description": "Attribute group for solution information",
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-",
              {
                "Ref": "AWS::Region"
              },
              "-",
              {
                "Ref": "AWS::AccountId"
              }
            ]
          ]
        },
        "Tags": {
          "awsApplication": {
            "Fn::GetAtt": [
              "appregistryconstructappregistryapplicationAC1A319B",
              "ApplicationTagValue"
            ]
          }
        }
      },
      "Type": "AWS::ServiceCatalogAppRegistry::AttributeGroup"
    },
    "cmsconfigawsresourcelookupcustomresourcelambdalambdafunctionFAC5FBD0": {
      "DependsOn": [
        "cmsconfigawsresourcelookupcustomresourcelambdalambdaroleA434B0CE",
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "test"
        },
        "Environment": {
          "Variables": {
            "USER_AGENT_STRING": "AWSSOLUTION/test-solution-id/test-solution-version AWSSOLUTION-CAPABILITY/test-capability-id/test-solution-version"
          }
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-aws-resource-lookup"
            ]
          ]
        },
        "Handler": "function.main.handler",
        "Layers": [
          {
            "Ref": "cmsconfigdependencylayerconstructlambdadependencylayerversionCF549CC2"
          }
        ],
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "cmsconfigawsresourcelookupcustomresourcelambdalambdaroleA434B0CE",
            "Arn"
          ]
        },
        "Runtime": "python3.12",
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          }
        ],
        "Timeout": 300,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "cmsconfigawsresourcelookupcustomresourcelambdasecuritygroupED99DFD8",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Ref": "VpcName"
                  },
                  "/subnets/private/1}}"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Ref": "VpcName"
                  },
                  "/subnets/private/2}}"
                ]
              ]
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Function"
    },
    "cmsconfigawsresourcelookupcustomresourcelambdalambdafunctionLogRetention1F74CCE0": {
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "cmsconfigawsresourcelookupcustomresourcelambdalambdafunctionFAC5FBD0"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "cmsconfigawsresourcelookupcustomresourcelambdalambdaroleA434B0CE": {
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "appliesTo": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/<AppUniqueId>-test-module-short-name-aws-resource-lookup:log-stream:*",
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/<AcdpUniqueId>-test-module-short-name-aws-resource-lookup:log-stream:*"
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Log retention lambda uses policies that require wildcard permissions"
            },
            {
              "appliesTo": [
                "Resource::arn:<AWS::Partition>:ec2:<AWS::Region>:<AWS::AccountId>:network-interface/*",
                "Resource::*"
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "ec2 Network Interfaces permissions need to be wildcard"
            }
          ]
        }
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-aws-resource-lookup"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-aws-resource-lookup:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "lambda-logs-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "ec2:CreateNetworkInterfacePermission",
                  "Condition": {
                    "StringEquals": {
                      "ec2:AuthorizedService": "lambda.amazonaws.com",
                      "ec2:Subnet": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Ref": "VpcName"
                              },
                              "/subnets/private/1}}"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Ref": "VpcName"
                              },
                              "/subnets/private/2}}"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":ec2:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":network-interface/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:CreateNetworkInterface",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "ec2-policy"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmsconfigawsresourcelookupcustomresourcelambdasecuritygroupED99DFD8": {
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "GroupDescription": "Default/cms-config/cms-config/aws-resource-lookup-custom-resource-lambda/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Ref": "VpcName"
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmsconfigcdklambdasvpcconstructsecuritygroupE578D63B": {
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "GroupDescription": "Default/cms-config/cms-config/cdk-lambdas-vpc-construct/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Ref": "VpcName"
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmsconfigcustomresourcelambdaconstructlambdafunction670EC06C": {
      "DependsOn": [
        "cmsconfigcustomresourcelambdaconstructlambdarole41621C04",
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "test"
        },
        "Environment": {
          "Variables": {
            "USER_AGENT_STRING": "AWSSOLUTION/test-solution-id/test-solution-version AWSSOLUTION-CAPABILITY/test-capability-id/test-solution-version"
          }
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-custom-resource"
            ]
          ]
        },
        "Handler": "function.main.handler",
        "Layers": [
          {
            "Ref": "cmsconfigdependencylayerconstructlambdadependencylayerversionCF549CC2"
          }
        ],
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "cmsconfigcustomresourcelambdaconstructlambdarole41621C04",
            "Arn"
          ]
        },
        "Runtime": "python3.12",
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          }
        ],
        "Timeout": 300,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "cmsconfigcustomresourcelambdaconstructsecuritygroup0A83289A",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Ref": "VpcName"
                  },
                  "/subnets/private/1}}"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Ref": "VpcName"
                  },
                  "/subnets/private/2}}"
                ]
              ]
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Function"
    },
    "cmsconfigcustomresourcelambdaconstructlambdafunctionLogRetentionF23B423D": {
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "cmsconfigcustomresourcelambdaconstructlambdafunction670EC06C"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "cmsconfigcustomresourcelambdaconstructlambdarole41621C04": {
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "appliesTo": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/<AppUniqueId>-test-module-short-name-custom-resource:log-stream:*",
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/<AcdpUniqueId>-test-module-short-name-custom-resource:log-stream:*"
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Log retention lambda uses policies that require wildcard permissions"
            },
            {
              "appliesTo": [
                "Resource::arn:<AWS::Partition>:ec2:<AWS::Region>:<AWS::AccountId>:network-interface/*",
                "Resource::*"
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "ec2 Network Interfaces permissions need to be wildcard"
            }
          ]
        }
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-custom-resource"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-custom-resource:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "lambda-logs-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "ec2:CreateNetworkInterfacePermission",
                  "Condition": {
                    "StringEquals": {
                      "ec2:AuthorizedService": "lambda.amazonaws.com",
                      "ec2:Subnet": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Ref": "VpcName"
                              },
                              "/subnets/private/1}}"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Ref": "VpcName"
                              },
                              "/subnets/private/2}}"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":ec2:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":network-interface/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:CreateNetworkInterface",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "ec2-policy"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmsconfigcustomresourcelambdaconstructsecuritygroup0A83289A": {
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "GroupDescription": "Default/cms-config/cms-config/custom-resource-lambda-construct/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Ref": "VpcName"
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmsconfigdependencylayerconstructlambdadependencylayerversionCF549CC2": {
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "CompatibleArchitectures": [
          "x86_64",
          "arm64"
        ],
        "CompatibleRuntimes": [
          "python3.12"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "test"
        }
      },
      "Type": "AWS::Lambda::LayerVersion"
    },
    "cmsconfigdeploymentuuidconstructdeploymentuuidcustomresourceD01A8D82": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "Resource": "CreateDeploymentUUID",
        "ServiceToken": {
          "Fn::GetAtt": [
            "cmsconfigcustomresourcelambdaconstructlambdafunction670EC06C",
            "Arn"
          ]
        }
      },
      "Type": "Custom::CreateDeploymentUUID",
      "UpdateReplacePolicy": "Delete"
    },
    "cmsconfigmetricsconstructcronruleAllowEventRulecmsconfigmetricsconstructlambdafunction4C93E93C6AFF8B41": {
      "Condition": "cmsconfigSendAnonymousUsage2AEBF069",
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cmsconfigmetricsconstructlambdafunction7416C7AB",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "cmsconfigmetricsconstructcronruleC48A9B55",
            "Arn"
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "cmsconfigmetricsconstructcronruleC48A9B55": {
      "Condition": "cmsconfigSendAnonymousUsage2AEBF069",
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "ScheduleExpression": "cron(0 1 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cmsconfigmetricsconstructlambdafunction7416C7AB",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Type": "AWS::Events::Rule"
    },
    "cmsconfigmetricsconstructlambdafunction7416C7AB": {
      "Condition": "cmsconfigSendAnonymousUsage2AEBF069",
      "DependsOn": [
        "cmsconfigmetricsconstructlambdaroleCB9421AE",
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "test"
        },
        "Environment": {
          "Variables": {
            "AWS_ACCOUNT_ID": {
              "Ref": "AWS::AccountId"
            },
            "DEPLOYMENT_UUID": {
              "Fn::GetAtt": [
                "cmsconfigdeploymentuuidconstructdeploymentuuidcustomresourceD01A8D82",
                "SolutionUUID"
              ]
            },
            "METRICS_SOLUTION_URL": "https://metrics.awssolutionsbuilder.com/generic",
            "SOLUTION_ID": "test-solution-id",
            "SOLUTION_VERSION": "test-solution-version",
            "USER_AGENT_STRING": "AWSSOLUTION/test-solution-id/test-solution-version AWSSOLUTION-CAPABILITY/test-capability-id/test-solution-version"
          }
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-anonymous-metrics"
            ]
          ]
        },
        "Handler": "function.main.handler",
        "Layers": [
          {
            "Ref": "cmsconfigdependencylayerconstructlambdadependencylayerversionCF549CC2"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "cmsconfigmetricsconstructlambdaroleCB9421AE",
            "Arn"
          ]
        },
        "Runtime": "python3.12",
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          }
        ],
        "Timeout": 300,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "cmsconfigmetricsconstructsecuritygroupE9E75D81",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Ref": "VpcName"
                  },
                  "/subnets/private/1}}"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Ref": "VpcName"
                  },
                  "/subnets/private/2}}"
                ]
              ]
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Function"
    },
    "cmsconfigmetricsconstructlambdafunctionLogRetentionCB5BEDD7": {
      "Condition": "cmsconfigSendAnonymousUsage2AEBF069",
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "cmsconfigmetricsconstructlambdafunction7416C7AB"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "cmsconfigmetricsconstructlambdaroleCB9421AE": {
      "Condition": "cmsconfigSendAnonymousUsage2AEBF069",
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-anonymous-metrics"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-anonymous-metrics:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "lambda-logs-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "cloudwatch:GetMetricData",
                    "cloudwatch:GetMetricStatistics",
                    "cloudwatch:ListMetrics"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-metrics-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "tag:GetResources",
                    "tag:GetTagKeys",
                    "tag:GetTagValues"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "resourcegroupstaggingapi-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "ec2:CreateNetworkInterfacePermission",
                  "Condition": {
                    "StringEquals": {
                      "ec2:AuthorizedService": "lambda.amazonaws.com",
                      "ec2:Subnet": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Ref": "VpcName"
                              },
                              "/subnets/private/1}}"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Ref": "VpcName"
                              },
                              "/subnets/private/2}}"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":ec2:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":network-interface/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:CreateNetworkInterface",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "ec2-policy"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmsconfigmetricsconstructsecuritygroupE9E75D81": {
      "Condition": "cmsconfigSendAnonymousUsage2AEBF069",
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "GroupDescription": "Default/cms-config/cms-config/metrics-construct/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Ref": "VpcName"
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmsconfigmoduleoutputsconstructawsresourcelookuplambdaarn1F7B695D": {
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "Description": "Arn of AWS resource lookup Lambda function",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/config/aws-resource-lookup-lambda/arn"
            ]
          ]
        },
        "Tags": {
          "awsApplication": {
            "Fn::GetAtt": [
              "appregistryconstructappregistryapplicationAC1A319B",
              "ApplicationTagValue"
            ]
          }
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "cmsconfigawsresourcelookupcustomresourcelambdalambdafunctionFAC5FBD0",
            "Arn"
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "cmsconfigmoduleoutputsconstructidentityproviderid38238832": {
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Identity Provider ID associated with app unique ID - ",
              {
                "Ref": "AppUniqueId"
              }
            ]
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/config/auth/identity-provider-id"
            ]
          ]
        },
        "Tags": {
          "awsApplication": {
            "Fn::GetAtt": [
              "appregistryconstructappregistryapplicationAC1A319B",
              "ApplicationTagValue"
            ]
          }
        },
        "Type": "String",
        "Value": {
          "Ref": "IdentityProviderId"
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "cmsconfigmoduleoutputsconstructssmanonymousmetricsenabledE1C6DC68": {
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Anonymous metrics enabled or not for app unique ID - ",
              {
                "Ref": "AppUniqueId"
              }
            ]
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/config/metrics/enabled"
            ]
          ]
        },
        "Tags": {
          "awsApplication": {
            "Fn::GetAtt": [
              "appregistryconstructappregistryapplicationAC1A319B",
              "ApplicationTagValue"
            ]
          }
        },
        "Type": "String",
        "Value": {
          "Fn::FindInMap": [
            "Solution",
            "Config",
            "SendAnonymousUsage"
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "cmsconfigmoduleoutputsconstructssmanonymousmetricsurlD8C5A271": {
      "Condition": "cmsconfigSendAnonymousUsage2AEBF069",
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "URL to send anonymous metrics to for app unique ID - ",
              {
                "Ref": "AppUniqueId"
              }
            ]
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/config/metrics/url"
            ]
          ]
        },
        "Tags": {
          "awsApplication": {
            "Fn::GetAtt": [
              "appregistryconstructappregistryapplicationAC1A319B",
              "ApplicationTagValue"
            ]
          }
        },
        "Type": "String",
        "Value": "https://metrics.awssolutionsbuilder.com/generic"
      },
      "Type": "AWS::SSM::Parameter"
    },
    "cmsconfigmoduleoutputsconstructssmdeploymentuuidBBDE349B": {
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Deployment UUID associated with app unique ID - ",
              {
                "Ref": "AppUniqueId"
              }
            ]
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/config/deployment-uuid"
            ]
          ]
        },
        "Tags": {
          "awsApplication": {
            "Fn::GetAtt": [
              "appregistryconstructappregistryapplicationAC1A319B",
              "ApplicationTagValue"
            ]
          }
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "cmsconfigdeploymentuuidconstructdeploymentuuidcustomresourceD01A8D82",
            "SolutionUUID"
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "cmsconfigmoduleoutputsconstructvpcname47751DBB": {
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "Description": "VPC Name",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/config/vpc/name"
            ]
          ]
        },
        "Tags": {
          "awsApplication": {
            "Fn::GetAtt": [
              "appregistryconstructappregistryapplicationAC1A319B",
              "ApplicationTagValue"
            ]
          }
        },
        "Type": "String",
        "Value": {
          "Ref": "VpcName"
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "cmsconfigssm0DF0CC25": {
      "DependsOn": [
        "ssmappuniqueidD1DCE51D"
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter/solution/",
                    {
                      "Ref": "AppUniqueId"
                    },
                    "/config/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "cmsconfigssm0DF0CC25",
        "Roles": [
          {
            "Ref": "cmsconfigawsresourcelookupcustomresourcelambdalambdaroleA434B0CE"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "ssmappuniqueidD1DCE51D": {
      "Properties": {
        "Description": "SSM parameter to register an app unique ID.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              }
            ]
          ]
        },
        "Tags": {
          "awsApplication": {
            "Fn::GetAtt": [
              "appregistryconstructappregistryapplicationAC1A319B",
              "ApplicationTagValue"
            ]
          }
        },
        "Type": "String",
        "Value": {
          "Ref": "AppUniqueId"
        }
      },
      "Type": "AWS::SSM::Parameter"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}
