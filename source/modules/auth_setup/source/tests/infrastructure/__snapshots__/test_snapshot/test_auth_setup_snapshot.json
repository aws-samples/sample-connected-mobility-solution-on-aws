{
  "Conditions": {
    "oauth2configurationsidpconfigshouldcreatesecretcondition8E1ACAD7": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "ShouldCreateCognitoResources"
            },
            "true"
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "IdPConfigSecretArn"
            },
            ""
          ]
        }
      ]
    },
    "oauth2configurationsidpconfigshoulduseexistingsecretcondition887152F8": {
      "Fn::And": [
        {
          "Fn::Equals": [
            {
              "Ref": "ShouldCreateCognitoResources"
            },
            "false"
          ]
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "IdPConfigSecretArn"
                },
                ""
              ]
            }
          ]
        }
      ]
    },
    "oauth2configurationsserviceclientconfigshouldcreatesecretcondition3EF28293": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "ShouldCreateCognitoResources"
            },
            "true"
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "ServiceClientConfigSecretArn"
            },
            ""
          ]
        }
      ]
    },
    "oauth2configurationsserviceclientconfigshoulduseexistingsecretcondition49AAE2D1": {
      "Fn::And": [
        {
          "Fn::Equals": [
            {
              "Ref": "ShouldCreateCognitoResources"
            },
            "false"
          ]
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "ServiceClientConfigSecretArn"
                },
                ""
              ]
            }
          ]
        }
      ]
    },
    "oauth2configurationsuserclientconfigshouldcreatesecretconditionD0828367": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "ShouldCreateCognitoResources"
            },
            "true"
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "UserClientConfigSecretArn"
            },
            ""
          ]
        }
      ]
    },
    "oauth2configurationsuserclientconfigshoulduseexistingsecretcondition956E1625": {
      "Fn::And": [
        {
          "Fn::Equals": [
            {
              "Ref": "ShouldCreateCognitoResources"
            },
            "false"
          ]
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "UserClientConfigSecretArn"
                },
                ""
              ]
            }
          ]
        }
      ]
    },
    "shouldcreatecognitoresourcescondition": {
      "Fn::Equals": [
        {
          "Ref": "ShouldCreateCognitoResources"
        },
        "true"
      ]
    }
  },
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x"
      },
      "ap-east-1": {
        "value": "nodejs20.x"
      },
      "ap-northeast-1": {
        "value": "nodejs20.x"
      },
      "ap-northeast-2": {
        "value": "nodejs20.x"
      },
      "ap-northeast-3": {
        "value": "nodejs20.x"
      },
      "ap-south-1": {
        "value": "nodejs20.x"
      },
      "ap-south-2": {
        "value": "nodejs20.x"
      },
      "ap-southeast-1": {
        "value": "nodejs20.x"
      },
      "ap-southeast-2": {
        "value": "nodejs20.x"
      },
      "ap-southeast-3": {
        "value": "nodejs20.x"
      },
      "ap-southeast-4": {
        "value": "nodejs20.x"
      },
      "ap-southeast-5": {
        "value": "nodejs20.x"
      },
      "ap-southeast-7": {
        "value": "nodejs20.x"
      },
      "ca-central-1": {
        "value": "nodejs20.x"
      },
      "ca-west-1": {
        "value": "nodejs20.x"
      },
      "cn-north-1": {
        "value": "nodejs18.x"
      },
      "cn-northwest-1": {
        "value": "nodejs18.x"
      },
      "eu-central-1": {
        "value": "nodejs20.x"
      },
      "eu-central-2": {
        "value": "nodejs20.x"
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x"
      },
      "eu-north-1": {
        "value": "nodejs20.x"
      },
      "eu-south-1": {
        "value": "nodejs20.x"
      },
      "eu-south-2": {
        "value": "nodejs20.x"
      },
      "eu-west-1": {
        "value": "nodejs20.x"
      },
      "eu-west-2": {
        "value": "nodejs20.x"
      },
      "eu-west-3": {
        "value": "nodejs20.x"
      },
      "il-central-1": {
        "value": "nodejs20.x"
      },
      "me-central-1": {
        "value": "nodejs20.x"
      },
      "me-south-1": {
        "value": "nodejs20.x"
      },
      "mx-central-1": {
        "value": "nodejs20.x"
      },
      "sa-east-1": {
        "value": "nodejs20.x"
      },
      "us-east-1": {
        "value": "nodejs20.x"
      },
      "us-east-2": {
        "value": "nodejs20.x"
      },
      "us-gov-east-1": {
        "value": "nodejs18.x"
      },
      "us-gov-west-1": {
        "value": "nodejs18.x"
      },
      "us-iso-east-1": {
        "value": "nodejs18.x"
      },
      "us-iso-west-1": {
        "value": "nodejs18.x"
      },
      "us-isob-east-1": {
        "value": "nodejs18.x"
      },
      "us-west-1": {
        "value": "nodejs20.x"
      },
      "us-west-2": {
        "value": "nodejs20.x"
      }
    },
    "Solution": {
      "AssetsConfig": {
        "S3AssetBucketBaseName": "test-bucket-base-name",
        "S3AssetKeyPrefix": "test-object-key-prefix"
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>"
    },
    "CallbackUrls": {
      "AllowedPattern": "^(https:\\/\\/|http:\\/\\/localhost|(?!http:\\/\\/(?!localhost))[a-zA-Z0-9+-.]*:\\/\\/)[a-zA-Z0-9\\\\!$%&'()*+,\\-./:;<=>?@\\[\\]^_`{|}~]{1,1024}(?!#)$",
      "Default": "https://example.com",
      "Description": "List of callback URLs allowed for the Cognito user pool. These are the allowed redirect uris during authentication",
      "Type": "CommaDelimitedList"
    },
    "IdPConfigSecretArn": {
      "AllowedPattern": "(^$)|(arn:aws:secretsmanager:[a-z0-9-]+:\\d{12}:secret:[a-zA-Z0-9/_+=.@-]+)",
      "ConstraintDescription": "Value must be a valid AWS SecretsManger secret Arn",
      "Default": "",
      "Description": "Secret Arn of preexisting IdP configuration json",
      "Type": "String"
    },
    "IdentityProviderId": {
      "ConstraintDescription": "The identity provider ID must be a minimum of 3 characters.",
      "Default": "cms",
      "Description": "The ID associated with the identity provider configurations used for validation and exchange.",
      "MinLength": 3,
      "Type": "String"
    },
    "ServiceClientConfigSecretArn": {
      "AllowedPattern": "(^$)|(arn:aws:secretsmanager:[a-z0-9-]+:\\d{12}:secret:[a-zA-Z0-9/_+=.@-]+)",
      "ConstraintDescription": "Value must be a valid AWS SecretsManger secret Arn",
      "Default": "",
      "Description": "Secret Arn of preexisting service client configuration json",
      "Type": "String"
    },
    "ShouldCreateCognitoResources": {
      "AllowedValues": [
        "true",
        "false"
      ],
      "ConstraintDescription": "Value must be boolean (true, false)",
      "Default": "true",
      "Description": "Boolean flag that creates resources for a default identity provider using Amazon Cognito",
      "Type": "String"
    },
    "UserClientConfigSecretArn": {
      "AllowedPattern": "(^$)|(arn:aws:secretsmanager:[a-z0-9-]+:\\d{12}:secret:[a-zA-Z0-9/_+=.@-]+)",
      "ConstraintDescription": "Value must be a valid AWS SecretsManger secret Arn",
      "Default": "",
      "Description": "Secret Arn of preexisting user client configuration json",
      "Type": "String"
    }
  },
  "Resources": {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn"
          ]
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region"
            },
            "value"
          ]
        },
        "Timeout": 120
      },
      "Type": "AWS::Lambda::Function"
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cognitoservicesserviceresourceserver625C8BB3": {
      "Condition": "shouldcreatecognitoresourcescondition",
      "Properties": {
        "Identifier": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "IdentityProviderId"
              },
              "-service-resource-server"
            ]
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "IdentityProviderId"
              },
              "-service-resource-server"
            ]
          ]
        },
        "Scopes": [
          {
            "ScopeDescription": {
              "Fn::Join": [
                "",
                [
                  "Default scope for all ",
                  {
                    "Ref": "IdentityProviderId"
                  },
                  " services."
                ]
              ]
            },
            "ScopeName": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "IdentityProviderId"
                  },
                  "-service"
                ]
              ]
            }
          }
        ],
        "UserPoolId": {
          "Ref": "cognitousersuserpool51A5F544"
        }
      },
      "Type": "AWS::Cognito::UserPoolResourceServer"
    },
    "cognitousersuserpool51A5F544": {
      "Condition": "shouldcreatecognitoresourcescondition",
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_email",
              "Priority": 1
            }
          ]
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true,
          "InviteMessageTemplate": {
            "EmailMessage": {
              "Fn::Join": [
                "",
                [
                  "Hello {username}, you have been invited to join ",
                  {
                    "Ref": "IdentityProviderId"
                  },
                  ".\nYour temporary password is: {####}"
                ]
              ]
            },
            "EmailSubject": {
              "Fn::Join": [
                "",
                [
                  "Invitation to join ",
                  {
                    "Ref": "IdentityProviderId"
                  },
                  "!"
                ]
              ]
            }
          }
        },
        "AliasAttributes": [
          "email"
        ],
        "AutoVerifiedAttributes": [
          "email"
        ],
        "DeviceConfiguration": {
          "ChallengeRequiredOnNewDevice": true,
          "DeviceOnlyRememberedOnUserPrompt": true
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "EnabledMfas": [
          "SOFTWARE_TOKEN_MFA"
        ],
        "MfaConfiguration": "ON",
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 8,
            "RequireLowercase": true,
            "RequireNumbers": true,
            "RequireSymbols": true,
            "RequireUppercase": true,
            "TemporaryPasswordValidityDays": 1
          }
        },
        "Schema": [
          {
            "Mutable": true,
            "Name": "email",
            "Required": true
          },
          {
            "Mutable": false,
            "Name": "name",
            "Required": false
          },
          {
            "Mutable": false,
            "Name": "phone_number",
            "Required": false
          },
          {
            "Mutable": true,
            "Name": "preferred_username",
            "Required": false
          },
          {
            "Mutable": true,
            "Name": "zoneinfo",
            "Required": false
          }
        ],
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolAddOns": {
          "AdvancedSecurityMode": "ENFORCED"
        },
        "UserPoolName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "IdentityProviderId"
              },
              "-user-pool"
            ]
          ]
        },
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}"
        }
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Delete"
    },
    "cognitousersuserpoolserviceclient76A43875": {
      "Condition": "shouldcreatecognitoresourcescondition",
      "Properties": {
        "AllowedOAuthFlows": [
          "client_credentials"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "cognitoservicesserviceresourceserver625C8BB3"
                },
                "/",
                {
                  "Ref": "IdentityProviderId"
                },
                "-service"
              ]
            ]
          }
        ],
        "ClientName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "IdentityProviderId"
              },
              "-service-client"
            ]
          ]
        },
        "ExplicitAuthFlows": [
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH"
        ],
        "GenerateSecret": true,
        "RefreshTokenValidity": 1440,
        "SupportedIdentityProviders": [
          "COGNITO"
        ],
        "TokenValidityUnits": {
          "RefreshToken": "minutes"
        },
        "UserPoolId": {
          "Ref": "cognitousersuserpool51A5F544"
        }
      },
      "Type": "AWS::Cognito::UserPoolClient"
    },
    "cognitousersuserpoolserviceclientDescribeCognitoUserPoolClient0C87FE67": {
      "Condition": "shouldcreatecognitoresourcescondition",
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "cognitousersuserpoolserviceclientDescribeCognitoUserPoolClientCustomResourcePolicy8D35F5AA"
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"describeUserPoolClient\",\"parameters\":{\"UserPoolId\":\"",
              {
                "Ref": "cognitousersuserpool51A5F544"
              },
              "\",\"ClientId\":\"",
              {
                "Ref": "cognitousersuserpoolserviceclient76A43875"
              },
              "\"},\"physicalResourceId\":{\"id\":\"",
              {
                "Ref": "cognitousersuserpoolserviceclient76A43875"
              },
              "\"}}"
            ]
          ]
        },
        "InstallLatestAwsSdk": false,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"describeUserPoolClient\",\"parameters\":{\"UserPoolId\":\"",
              {
                "Ref": "cognitousersuserpool51A5F544"
              },
              "\",\"ClientId\":\"",
              {
                "Ref": "cognitousersuserpoolserviceclient76A43875"
              },
              "\"},\"physicalResourceId\":{\"id\":\"",
              {
                "Ref": "cognitousersuserpoolserviceclient76A43875"
              },
              "\"}}"
            ]
          ]
        }
      },
      "Type": "Custom::DescribeCognitoUserPoolClient",
      "UpdateReplacePolicy": "Delete"
    },
    "cognitousersuserpoolserviceclientDescribeCognitoUserPoolClientCustomResourcePolicy8D35F5AA": {
      "Condition": "shouldcreatecognitoresourcescondition",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "cognitousersuserpool51A5F544",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "cognitousersuserpoolserviceclientDescribeCognitoUserPoolClientCustomResourcePolicy8D35F5AA",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "cognitousersuserpooluserclientDescribeCognitoUserPoolClient58A73904": {
      "Condition": "shouldcreatecognitoresourcescondition",
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "cognitousersuserpooluserclientDescribeCognitoUserPoolClientCustomResourcePolicy9DCE1D12"
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"describeUserPoolClient\",\"parameters\":{\"UserPoolId\":\"",
              {
                "Ref": "cognitousersuserpool51A5F544"
              },
              "\",\"ClientId\":\"",
              {
                "Ref": "cognitousersuserpooluserclientE8342D23"
              },
              "\"},\"physicalResourceId\":{\"id\":\"",
              {
                "Ref": "cognitousersuserpooluserclientE8342D23"
              },
              "\"}}"
            ]
          ]
        },
        "InstallLatestAwsSdk": false,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"describeUserPoolClient\",\"parameters\":{\"UserPoolId\":\"",
              {
                "Ref": "cognitousersuserpool51A5F544"
              },
              "\",\"ClientId\":\"",
              {
                "Ref": "cognitousersuserpooluserclientE8342D23"
              },
              "\"},\"physicalResourceId\":{\"id\":\"",
              {
                "Ref": "cognitousersuserpooluserclientE8342D23"
              },
              "\"}}"
            ]
          ]
        }
      },
      "Type": "Custom::DescribeCognitoUserPoolClient",
      "UpdateReplacePolicy": "Delete"
    },
    "cognitousersuserpooluserclientDescribeCognitoUserPoolClientCustomResourcePolicy9DCE1D12": {
      "Condition": "shouldcreatecognitoresourcescondition",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "cognitousersuserpool51A5F544",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "cognitousersuserpooluserclientDescribeCognitoUserPoolClientCustomResourcePolicy9DCE1D12",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "cognitousersuserpooluserclientE8342D23": {
      "Condition": "shouldcreatecognitoresourcescondition",
      "Properties": {
        "AllowedOAuthFlows": [
          "code"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "email",
          "openid",
          "profile",
          {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "cognitousersuserresourceserver92FD33B9"
                },
                "/",
                {
                  "Ref": "IdentityProviderId"
                },
                "-user"
              ]
            ]
          }
        ],
        "CallbackURLs": {
          "Ref": "CallbackUrls"
        },
        "ClientName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "IdentityProviderId"
              },
              "-users-client"
            ]
          ]
        },
        "ExplicitAuthFlows": [
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH"
        ],
        "GenerateSecret": true,
        "RefreshTokenValidity": 1440,
        "SupportedIdentityProviders": [
          "COGNITO"
        ],
        "TokenValidityUnits": {
          "RefreshToken": "minutes"
        },
        "UserPoolId": {
          "Ref": "cognitousersuserpool51A5F544"
        }
      },
      "Type": "AWS::Cognito::UserPoolClient"
    },
    "cognitousersuserpooluserpoolcognitodomain284E63B2": {
      "Condition": "shouldcreatecognitoresourcescondition",
      "Properties": {
        "Domain": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "IdentityProviderId"
              },
              "-",
              {
                "Ref": "AWS::AccountId"
              }
            ]
          ]
        },
        "UserPoolId": {
          "Ref": "cognitousersuserpool51A5F544"
        }
      },
      "Type": "AWS::Cognito::UserPoolDomain"
    },
    "cognitousersuserresourceserver92FD33B9": {
      "Condition": "shouldcreatecognitoresourcescondition",
      "Properties": {
        "Identifier": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "IdentityProviderId"
              },
              "-user-resource-server"
            ]
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "IdentityProviderId"
              },
              "-user-resource-server"
            ]
          ]
        },
        "Scopes": [
          {
            "ScopeDescription": {
              "Fn::Join": [
                "",
                [
                  "Default scope for all ",
                  {
                    "Ref": "IdentityProviderId"
                  },
                  " users."
                ]
              ]
            },
            "ScopeName": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "IdentityProviderId"
                  },
                  "-user"
                ]
              ]
            }
          }
        ],
        "UserPoolId": {
          "Ref": "cognitousersuserpool51A5F544"
        }
      },
      "Type": "AWS::Cognito::UserPoolResourceServer"
    },
    "moduleoutputsssmcognitouserpoolid8A5E259C": {
      "Properties": {
        "Description": "User pool id for Cognito user pool",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/auth/",
              {
                "Ref": "IdentityProviderId"
              },
              "/user-pool/id"
            ]
          ]
        },
        "Type": "String",
        "Value": {
          "Ref": "cognitousersuserpool51A5F544"
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "moduleoutputsssmidpconfigsecretarnCF8D6D64": {
      "Properties": {
        "Description": "Secret Arn for IdP configurations needed to facilitate authentication and authorization via OAuth 2.0 identity providers.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/auth/",
              {
                "Ref": "IdentityProviderId"
              },
              "/idp-config/secret/arn"
            ]
          ]
        },
        "Type": "String",
        "Value": {
          "Fn::If": [
            "oauth2configurationsidpconfigshouldcreatesecretcondition8E1ACAD7",
            {
              "Ref": "oauth2configurationsidpconfignewsecret8744D945"
            },
            {
              "Ref": "IdPConfigSecretArn"
            }
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "moduleoutputsssmserviceclientconfigsecretarn57E3B212": {
      "Properties": {
        "Description": "Secret Arn for service client configuration needed for OAuth 2.0 operations.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/auth/",
              {
                "Ref": "IdentityProviderId"
              },
              "/service-client-config/default/secret/arn"
            ]
          ]
        },
        "Type": "String",
        "Value": {
          "Fn::If": [
            "oauth2configurationsserviceclientconfigshouldcreatesecretcondition3EF28293",
            {
              "Ref": "oauth2configurationsserviceclientconfignewsecret4AAF7254"
            },
            {
              "Ref": "ServiceClientConfigSecretArn"
            }
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "moduleoutputsssmuserclientconfigsecretarn6B355AC9": {
      "Properties": {
        "Description": "Secret Arn for user client configuration needed for OAuth 2.0 operations.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/auth/",
              {
                "Ref": "IdentityProviderId"
              },
              "/user-client-config/default/secret/arn"
            ]
          ]
        },
        "Type": "String",
        "Value": {
          "Fn::If": [
            "oauth2configurationsuserclientconfigshouldcreatesecretconditionD0828367",
            {
              "Ref": "oauth2configurationsuserclientconfignewsecret26306020"
            },
            {
              "Ref": "UserClientConfigSecretArn"
            }
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "oauth2configurationsidpconfignewsecret8744D945": {
      "Condition": "oauth2configurationsidpconfigshouldcreatesecretcondition8E1ACAD7",
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "IdP configurations needed to facilitate authentication and authorization via OAuth 2.0 identity providers.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/auth/",
              {
                "Ref": "IdentityProviderId"
              },
              "/idp-config"
            ]
          ]
        },
        "SecretString": {
          "Fn::If": [
            "shouldcreatecognitoresourcescondition",
            {
              "Fn::Join": [
                "",
                [
                  "{\"issuer\": \"https://cognito-idp.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".amazonaws.com/",
                  {
                    "Ref": "cognitousersuserpool51A5F544"
                  },
                  "\", \"token_endpoint\": \"https://",
                  {
                    "Ref": "cognitousersuserpooluserpoolcognitodomain284E63B2"
                  },
                  ".auth.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".amazoncognito.com/oauth2/token\", \"authorization_endpoint\": \"https://",
                  {
                    "Ref": "cognitousersuserpooluserpoolcognitodomain284E63B2"
                  },
                  ".auth.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".amazoncognito.com/oauth2/authorize\", \"alternate_aud_key\": \"client_id\", \"auds\": [\"",
                  {
                    "Ref": "cognitousersuserpooluserclientE8342D23"
                  },
                  "\", \"",
                  {
                    "Ref": "cognitousersuserpoolserviceclient76A43875"
                  },
                  "\"], \"scopes\": [\"email\", \"openid\", \"profile\", \"",
                  {
                    "Ref": "cognitousersuserresourceserver92FD33B9"
                  },
                  "/",
                  {
                    "Ref": "IdentityProviderId"
                  },
                  "-user\", \"",
                  {
                    "Ref": "cognitoservicesserviceresourceserver625C8BB3"
                  },
                  "/",
                  {
                    "Ref": "IdentityProviderId"
                  },
                  "-service\"]}"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "{\"issuer\": \"\", \"token_endpoint\": \"https://",
                  {
                    "Ref": "cognitousersuserpooluserpoolcognitodomain284E63B2"
                  },
                  ".auth.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".amazoncognito.com/oauth2/token\", \"authorization_endpoint\": \"https://",
                  {
                    "Ref": "cognitousersuserpooluserpoolcognitodomain284E63B2"
                  },
                  ".auth.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".amazoncognito.com/oauth2/authorize\", \"alternate_aud_key\": \"\", \"auds\": [], \"scopes\": []}"
                ]
              ]
            }
          ]
        }
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete"
    },
    "oauth2configurationsserviceclientconfignewsecret4AAF7254": {
      "Condition": "oauth2configurationsserviceclientconfigshouldcreatesecretcondition3EF28293",
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "Service client configuration needed for OAuth 2.0 operations.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/auth/",
              {
                "Ref": "IdentityProviderId"
              },
              "/service-client-config/default"
            ]
          ]
        },
        "SecretString": {
          "Fn::If": [
            "shouldcreatecognitoresourcescondition",
            {
              "Fn::Join": [
                "",
                [
                  "{\"client_id\": \"",
                  {
                    "Ref": "cognitousersuserpoolserviceclient76A43875"
                  },
                  "\", \"client_secret\": \"",
                  {
                    "Fn::GetAtt": [
                      "cognitousersuserpoolserviceclientDescribeCognitoUserPoolClient0C87FE67",
                      "UserPoolClient.ClientSecret"
                    ]
                  },
                  "\", \"audience\": \"\"}"
                ]
              ]
            },
            "{\"client_id\": \"\", \"client_secret\": \"\", \"audience\": \"\"}"
          ]
        }
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete"
    },
    "oauth2configurationsuserclientconfignewsecret26306020": {
      "Condition": "oauth2configurationsuserclientconfigshouldcreatesecretconditionD0828367",
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "User client configuration needed for OAuth 2.0 operations.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/auth/",
              {
                "Ref": "IdentityProviderId"
              },
              "/user-client-config/default"
            ]
          ]
        },
        "SecretString": {
          "Fn::If": [
            "shouldcreatecognitoresourcescondition",
            {
              "Fn::Join": [
                "",
                [
                  "{\"client_id\": \"",
                  {
                    "Ref": "cognitousersuserpooluserclientE8342D23"
                  },
                  "\", \"client_secret\": \"",
                  {
                    "Fn::GetAtt": [
                      "cognitousersuserpooluserclientDescribeCognitoUserPoolClient58A73904",
                      "UserPoolClient.ClientSecret"
                    ]
                  },
                  "\"}"
                ]
              ]
            },
            "{\"client_id\": \"\", \"client_secret\": \"\"}"
          ]
        }
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}
