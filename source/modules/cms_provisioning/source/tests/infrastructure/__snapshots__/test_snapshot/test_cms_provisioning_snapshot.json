{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x"
      },
      "ap-east-1": {
        "value": "nodejs20.x"
      },
      "ap-northeast-1": {
        "value": "nodejs20.x"
      },
      "ap-northeast-2": {
        "value": "nodejs20.x"
      },
      "ap-northeast-3": {
        "value": "nodejs20.x"
      },
      "ap-south-1": {
        "value": "nodejs20.x"
      },
      "ap-south-2": {
        "value": "nodejs20.x"
      },
      "ap-southeast-1": {
        "value": "nodejs20.x"
      },
      "ap-southeast-2": {
        "value": "nodejs20.x"
      },
      "ap-southeast-3": {
        "value": "nodejs20.x"
      },
      "ap-southeast-4": {
        "value": "nodejs20.x"
      },
      "ap-southeast-5": {
        "value": "nodejs20.x"
      },
      "ap-southeast-7": {
        "value": "nodejs20.x"
      },
      "ca-central-1": {
        "value": "nodejs20.x"
      },
      "ca-west-1": {
        "value": "nodejs20.x"
      },
      "cn-north-1": {
        "value": "nodejs18.x"
      },
      "cn-northwest-1": {
        "value": "nodejs18.x"
      },
      "eu-central-1": {
        "value": "nodejs20.x"
      },
      "eu-central-2": {
        "value": "nodejs20.x"
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x"
      },
      "eu-north-1": {
        "value": "nodejs20.x"
      },
      "eu-south-1": {
        "value": "nodejs20.x"
      },
      "eu-south-2": {
        "value": "nodejs20.x"
      },
      "eu-west-1": {
        "value": "nodejs20.x"
      },
      "eu-west-2": {
        "value": "nodejs20.x"
      },
      "eu-west-3": {
        "value": "nodejs20.x"
      },
      "il-central-1": {
        "value": "nodejs20.x"
      },
      "me-central-1": {
        "value": "nodejs20.x"
      },
      "me-south-1": {
        "value": "nodejs20.x"
      },
      "mx-central-1": {
        "value": "nodejs20.x"
      },
      "sa-east-1": {
        "value": "nodejs20.x"
      },
      "us-east-1": {
        "value": "nodejs20.x"
      },
      "us-east-2": {
        "value": "nodejs20.x"
      },
      "us-gov-east-1": {
        "value": "nodejs18.x"
      },
      "us-gov-west-1": {
        "value": "nodejs18.x"
      },
      "us-iso-east-1": {
        "value": "nodejs18.x"
      },
      "us-iso-west-1": {
        "value": "nodejs18.x"
      },
      "us-isob-east-1": {
        "value": "nodejs18.x"
      },
      "us-west-1": {
        "value": "nodejs20.x"
      },
      "us-west-2": {
        "value": "nodejs20.x"
      }
    },
    "Solution": {
      "AssetsConfig": {
        "S3AssetBucketBaseName": "test-bucket-base-name",
        "S3AssetKeyPrefix": "test-object-key-prefix"
      }
    }
  },
  "Parameters": {
    "AppUniqueId": {
      "AllowedPattern": "^(?!-)[a-z0-9-]+(?<!-)$",
      "ConstraintDescription": "AppUniqueId must contain min 3 and max 10 characters, and contain only lowercase alphanumeric characters and dashes.",
      "Description": "Application unique identifier used to uniquely name resources within the stack.",
      "MaxLength": 10,
      "MinLength": 3,
      "Type": "String"
    },
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>"
    }
  },
  "Resources": {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn"
          ]
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region"
            },
            "value"
          ]
        },
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          }
        ],
        "Timeout": 900
      },
      "Type": "AWS::Lambda::Function"
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "appregistryconstructappregistryapplicationAC1A319B": {
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-",
              {
                "Ref": "AWS::Region"
              },
              "-",
              {
                "Ref": "AWS::AccountId"
              }
            ]
          ]
        }
      },
      "Type": "AWS::ServiceCatalogAppRegistry::Application"
    },
    "appregistryconstructappregistryapplicationattributeassociation802A10B5": {
      "Properties": {
        "Application": {
          "Fn::GetAtt": [
            "appregistryconstructappregistryapplicationAC1A319B",
            "Id"
          ]
        },
        "AttributeGroup": {
          "Fn::GetAtt": [
            "appregistryconstructdefaultapplicationattributes8FF6B3DB",
            "Id"
          ]
        }
      },
      "Type": "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation"
    },
    "appregistryconstructdefaultapplicationattributes8FF6B3DB": {
      "Properties": {
        "Attributes": {
          "ApplicationType": "test-application-type",
          "SolutionID": "test-solution-id",
          "SolutionName": "test-solution-name",
          "Version": "test-solution-version"
        },
        "Description": "Attribute group for solution information",
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-",
              {
                "Ref": "AWS::Region"
              },
              "-",
              {
                "Ref": "AWS::AccountId"
              }
            ]
          ]
        },
        "Tags": {
          "awsApplication": {
            "Fn::GetAtt": [
              "appregistryconstructappregistryapplicationAC1A319B",
              "ApplicationTagValue"
            ]
          }
        }
      },
      "Type": "AWS::ServiceCatalogAppRegistry::AttributeGroup"
    },
    "cmsprovisioningcdklambdasvpcconstructsecuritygroup8463C5D5": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W5",
              "reason": "Unable to know egress requirement. leaving open for now"
            },
            {
              "id": "W40",
              "reason": "Unable to know egress requirement. leaving open for now"
            }
          ]
        }
      },
      "Properties": {
        "GroupDescription": "Default/cms-provisioning-stack/cms-provisioning/cdk-lambdas-vpc-construct/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Fn::GetAtt": [
                  "moduleinputsconstructvpcnamecustomresource12726E51",
                  "parameter_value"
                ]
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmsprovisioningcustomresourcelambdaconstructlambdafunction1099C83F": {
      "DependsOn": [
        "cmsprovisioningcustomresourcelambdaconstructlambdaroleCDCF3E1C",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W92",
              "reason": "Ignore reserved concurrent execution requirements for Lambda functions for now."
            }
          ]
        }
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Environment": {
          "Variables": {
            "USER_AGENT_STRING": "AWSSOLUTION/test-solution-id/test-solution-version AWSSOLUTION-CAPABILITY/test-capability-id/test-solution-version"
          }
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-custom-resource"
            ]
          ]
        },
        "Handler": "function.main.handler",
        "Layers": [
          {
            "Ref": "cmsprovisioningdependencylayerconstructlambdadependencylayerversion039423A0"
          }
        ],
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "cmsprovisioningcustomresourcelambdaconstructlambdaroleCDCF3E1C",
            "Arn"
          ]
        },
        "Runtime": "python3.12",
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "Timeout": 300,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "cmsprovisioningcustomresourcelambdaconstructsecuritygroup01A48BFB",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/1}}"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/2}}"
                ]
              ]
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Function"
    },
    "cmsprovisioningcustomresourcelambdaconstructlambdafunctionLogRetention6F6D2408": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "cmsprovisioningcustomresourcelambdaconstructlambdafunction1099C83F"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "cmsprovisioningcustomresourcelambdaconstructlambdaroleCDCF3E1C": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "appliesTo": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/<AppUniqueId>-test-module-short-name-custom-resource:log-stream:*",
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/<AcdpUniqueId>-test-module-short-name-custom-resource:log-stream:*"
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Log retention lambda uses policies that require wildcard permissions"
            },
            {
              "appliesTo": [
                "Resource::arn:<AWS::Partition>:ec2:<AWS::Region>:<AWS::AccountId>:network-interface/*",
                "Resource::*"
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "ec2 Network Interfaces permissions need to be wildcard"
            }
          ]
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcard permissions required to write to log streams."
            },
            {
              "id": "W11",
              "reason": "ec2 Network Interfaces permissions need to be wildcard"
            }
          ]
        }
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-custom-resource"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-custom-resource:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "lambda-logs-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "ec2:CreateNetworkInterfacePermission",
                  "Condition": {
                    "StringEquals": {
                      "ec2:AuthorizedService": "lambda.amazonaws.com",
                      "ec2:Subnet": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/1}}"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/2}}"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":ec2:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":network-interface/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:CreateNetworkInterface",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "ec2-policy"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmsprovisioningcustomresourcelambdaconstructsecuritygroup01A48BFB": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W40",
              "reason": "Lambdas need outbound communication to contact other resources in VPC"
            },
            {
              "id": "W5",
              "reason": "Lambdas are inside Private Subnets and may need to communicate to services over internet. So the CIDR is wide open on egress for now"
            }
          ]
        }
      },
      "Properties": {
        "GroupDescription": "Default/cms-provisioning-stack/cms-provisioning/custom-resource-lambda-construct/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Fn::GetAtt": [
                  "moduleinputsconstructvpcnamecustomresource12726E51",
                  "parameter_value"
                ]
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmsprovisioningdependencylayerconstructlambdadependencylayerversion039423A0": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "CompatibleArchitectures": [
          "x86_64",
          "arm64"
        ],
        "CompatibleRuntimes": [
          "python3.12"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        }
      },
      "Type": "AWS::Lambda::LayerVersion"
    },
    "cmsprovisioninginitialconnectionconstructiotinitialconnectionlambdaruleA572C93E": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "RuleName": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::Join": [
                  "_",
                  {
                    "Fn::Split": [
                      "-",
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "AppUniqueId"
                            },
                            "_test-module-short-name"
                          ]
                        ]
                      }
                    ]
                  }
                ]
              },
              "_iot_initial_connection"
            ]
          ]
        },
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "TopicRulePayload": {
          "Actions": [
            {
              "Lambda": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "cmsprovisioninginitialconnectionconstructlambdafunctionE742FB16",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "Description": "Trigger lambda to updated ProvisionedVehicles record on vehicle initial connection.",
          "Sql": "SELECT * FROM 'vehicleactive/#'"
        }
      },
      "Type": "AWS::IoT::TopicRule"
    },
    "cmsprovisioninginitialconnectionconstructlambdafunctionE742FB16": {
      "DependsOn": [
        "cmsprovisioninginitialconnectionconstructlambdarole7516881B",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Description": "CMS Provisioning initial connection lambda function",
        "Environment": {
          "Variables": {
            "PROVISIONED_VEHICLES_TABLE_NAME": {
              "Ref": "cmsprovisioningprovisioningdatabaseconstructprovisionedvehiclestable22CC62F9"
            },
            "USER_AGENT_STRING": "AWSSOLUTION/test-solution-id/test-solution-version AWSSOLUTION-CAPABILITY/test-capability-id/test-solution-version"
          }
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-initial-connection"
            ]
          ]
        },
        "Handler": "function.initial_connection.handler",
        "Layers": [
          {
            "Ref": "cmsprovisioningdependencylayerconstructlambdadependencylayerversion039423A0"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "cmsprovisioninginitialconnectionconstructlambdarole7516881B",
            "Arn"
          ]
        },
        "Runtime": "python3.12",
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "cmsprovisioninginitialconnectionconstructsecuritygroup3EF4A651",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/1}}"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/2}}"
                ]
              ]
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Function"
    },
    "cmsprovisioninginitialconnectionconstructlambdafunctionLogRetentionD4B4DFE2": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "cmsprovisioninginitialconnectionconstructlambdafunctionE742FB16"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "cmsprovisioninginitialconnectionconstructlambdafunctioniotinvokeinitialconnectionlambdapermission4F4EB5F5": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cmsprovisioninginitialconnectionconstructlambdafunctionE742FB16",
            "Arn"
          ]
        },
        "Principal": "iot.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "cmsprovisioninginitialconnectionconstructlambdarole7516881B": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-initial-connection"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-initial-connection:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-logs-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "dynamodb:UpdateItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/",
                        {
                          "Ref": "cmsprovisioningprovisioningdatabaseconstructprovisionedvehiclestable22CC62F9"
                        }
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:GenerateDataKey"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":kms:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":key/",
                        {
                          "Ref": "cmsprovisioningprovisioningdatabaseconstructprovisionedvehiclestablekmskeyB9F9B859"
                        }
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dynamodb-provisioned-vehicles-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "ec2:CreateNetworkInterfacePermission",
                  "Condition": {
                    "StringEquals": {
                      "ec2:AuthorizedService": "lambda.amazonaws.com",
                      "ec2:Subnet": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/1}}"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/2}}"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":ec2:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":network-interface/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:CreateNetworkInterface",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "ec2-vpc-policy"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmsprovisioninginitialconnectionconstructsecuritygroup3EF4A651": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "GroupDescription": "Default/cms-provisioning-stack/cms-provisioning/initial-connection-construct/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Fn::GetAtt": [
                  "moduleinputsconstructvpcnamecustomresource12726E51",
                  "parameter_value"
                ]
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmsprovisioningiotcredentialsconstructcustomresourcepolicy35E875F7": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iot:CreateKeysAndCertificate",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
                "secretsmanager:RotateSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":secretsmanager:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":secret:solution/",
                    {
                      "Ref": "AppUniqueId"
                    },
                    "/test-module-short-name/provisioning-credentials*"
                  ]
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "cmsprovisioningiotcredentialsconstructrotatesecretlambdafunction1B0231E6",
                  "Arn"
                ]
              }
            },
            {
              "Action": "secretsmanager:CreateSecret",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":secretsmanager:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":secret:*"
                  ]
                ]
              }
            },
            {
              "Action": "iot:DeleteCertificate",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":iot:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":cert/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "cmsprovisioningiotcredentialsconstructcustomresourcepolicy35E875F7",
        "Roles": [
          {
            "Ref": "cmsprovisioningcustomresourcelambdaconstructlambdaroleCDCF3E1C"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "cmsprovisioningiotcredentialsconstructloadorcreateiotcredentials343138E5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "cmsprovisioningiotcredentialsconstructcustomresourcepolicy35E875F7",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "IoTCredentialsSecretId": {
          "Fn::Join": [
            "",
            [
              "solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/test-module-short-name/provisioning-credentials"
            ]
          ]
        },
        "Resource": "LoadOrCreateIoTCredentials",
        "RotateSecretLambdaARN": {
          "Fn::GetAtt": [
            "cmsprovisioningiotcredentialsconstructrotatesecretlambdafunction1B0231E6",
            "Arn"
          ]
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "cmsprovisioningcustomresourcelambdaconstructlambdafunction1099C83F",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LoadOrCreateIoTCredentials",
      "UpdateReplacePolicy": "Delete"
    },
    "cmsprovisioningiotcredentialsconstructrotatesecretlambdafunction1B0231E6": {
      "DependsOn": [
        "cmsprovisioningiotcredentialsconstructrotatesecretlambdarole8EFDB264",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Description": "CMS Provisioning rotate secrets lambda function",
        "Environment": {
          "Variables": {
            "CLAIM_CERT_PROVISIONING_POLICY_NAME": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AppUniqueId"
                  },
                  "-test-module-short-name-claim-cert-provisioning-policy"
                ]
              ]
            },
            "USER_AGENT_STRING": "AWSSOLUTION/test-solution-id/test-solution-version AWSSOLUTION-CAPABILITY/test-capability-id/test-solution-version"
          }
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-rotate-secret"
            ]
          ]
        },
        "Handler": "function.main.handler",
        "Layers": [
          {
            "Ref": "cmsprovisioningdependencylayerconstructlambdadependencylayerversion039423A0"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "cmsprovisioningiotcredentialsconstructrotatesecretlambdarole8EFDB264",
            "Arn"
          ]
        },
        "Runtime": "python3.12",
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "cmsprovisioningiotcredentialsconstructsecuritygroup69E788F4",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/1}}"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/2}}"
                ]
              ]
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Function"
    },
    "cmsprovisioningiotcredentialsconstructrotatesecretlambdafunctionLogRetentionD1DC60BA": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "cmsprovisioningiotcredentialsconstructrotatesecretlambdafunction1B0231E6"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "cmsprovisioningiotcredentialsconstructrotatesecretlambdafunctionsecretsmanagerinvokerotatesecretlambdapermission146ED1D9": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cmsprovisioningiotcredentialsconstructrotatesecretlambdafunction1B0231E6",
            "Arn"
          ]
        },
        "Principal": "secretsmanager.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "cmsprovisioningiotcredentialsconstructrotatesecretlambdarole8EFDB264": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:PutSecretValue",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:UpdateSecretVersionStage"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":secretsmanager:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":secret:solution/",
                        {
                          "Ref": "AppUniqueId"
                        },
                        "/test-module-short-name/provisioning-credentials*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "secrets-manager-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "iot:UpdateCertificate",
                    "iot:DeleteCertificate",
                    "iot:ListAttachedPolicies"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":cert/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "iot:AttachPolicy",
                    "iot:DetachPolicy"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":iot:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":cert/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":iot:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":policy/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-claim-cert-provisioning-policy"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Action": [
                    "iot:CreateKeysAndCertificate",
                    "iot:RegisterCertificateWithoutCA"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "iot-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-rotate-secret"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-rotate-secret:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "ec2:CreateNetworkInterfacePermission",
                  "Condition": {
                    "StringEquals": {
                      "ec2:AuthorizedService": "lambda.amazonaws.com",
                      "ec2:Subnet": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/1}}"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/2}}"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":ec2:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":network-interface/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:CreateNetworkInterface",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "ec2-vpc-policy"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmsprovisioningiotcredentialsconstructsecuritygroup69E788F4": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "GroupDescription": "Default/cms-provisioning-stack/cms-provisioning/iot-credentials-construct/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Fn::GetAtt": [
                  "moduleinputsconstructvpcnamecustomresource12726E51",
                  "parameter_value"
                ]
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmsprovisioningiotprovisioningcertificateconstructclaimcertificateBD81514F": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "CertificateMode": "SNI_ONLY",
        "CertificatePem": {
          "Fn::GetAtt": [
            "cmsprovisioningiotcredentialsconstructloadorcreateiotcredentials343138E5",
            "CERTIFICATE_PEM"
          ]
        },
        "Status": "ACTIVE"
      },
      "Type": "AWS::IoT::Certificate"
    },
    "cmsprovisioningiotprovisioningcertificateconstructclaimcertificateprovisioningpolicy303BB579": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iot:Connect",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "iot:Publish",
                "iot:Receive"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iot:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":topic/$aws/certificates/create/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iot:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":topic/$aws/provisioning-templates/",
                      {
                        "Ref": "AppUniqueId"
                      },
                      "--provisioning-template/provision/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "iot:Subscribe",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iot:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":topicfilter/$aws/certificates/create/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iot:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":topicfilter/$aws/provisioning-templates/",
                      {
                        "Ref": "AppUniqueId"
                      },
                      "--provisioning-template/provision/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-claim-cert-provisioning-policy"
            ]
          ]
        },
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IoT::Policy"
    },
    "cmsprovisioningiotprovisioningcertificateconstructclaimcertificateprovisioningpolicyprincipalattachment9CF17230": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "PolicyName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-claim-cert-provisioning-policy"
            ]
          ]
        },
        "Principal": {
          "Fn::GetAtt": [
            "cmsprovisioningiotprovisioningcertificateconstructclaimcertificateBD81514F",
            "Arn"
          ]
        }
      },
      "Type": "AWS::IoT::PolicyPrincipalAttachment"
    },
    "cmsprovisioningiotprovisioningcertificateconstructcustomresourcepolicy96678A1C": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iot:DeleteCertificate",
                "iot:UpdateCertificate"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":iot:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":cert/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "iot:ListTargetsForPolicy",
                "iot:DetachPolicy"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iot:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":policy/",
                      {
                        "Ref": "AppUniqueId"
                      },
                      "-test-module-short-name-claim-cert-provisioning-policy"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iot:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":cert/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "cmsprovisioningiotprovisioningcertificateconstructcustomresourcepolicy96678A1C",
        "Roles": [
          {
            "Ref": "cmsprovisioningcustomresourcelambdaconstructlambdaroleCDCF3E1C"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "cmsprovisioningiotprovisioningcertificateconstructdeleteprovisioningcertificateA71AAF95": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "cmsprovisioningiotprovisioningcertificateconstructcustomresourcepolicy96678A1C",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "IoTPolicyName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-claim-cert-provisioning-policy"
            ]
          ]
        },
        "Resource": "DeleteProvisioningCertificate",
        "ServiceToken": {
          "Fn::GetAtt": [
            "cmsprovisioningcustomresourcelambdaconstructlambdafunction1099C83F",
            "Arn"
          ]
        }
      },
      "Type": "Custom::DeleteProvisioningCertificate",
      "UpdateReplacePolicy": "Delete"
    },
    "cmsprovisioningiotprovisioningtemplateconstructfleetprovisioningtemplate1BF147E7": {
      "DependsOn": [
        "cmsprovisioningpreprovisioningconstructlambdafunctioniotinvokepreprovisioninglambdapermissionAE00A3BF",
        "cmsprovisioningpreprovisioningconstructlambdafunctionLogRetention47CBD589",
        "cmsprovisioningpreprovisioningconstructlambdafunction778D60D6",
        "cmsprovisioningpreprovisioningconstructlambdarole0B457706",
        "cmsprovisioningpreprovisioningconstructsecuritygroupC7FFCBC4",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Description": "Template used to provision new vehicle",
        "Enabled": true,
        "PreProvisioningHook": {
          "TargetArn": {
            "Fn::GetAtt": [
              "cmsprovisioningpreprovisioningconstructlambdafunction778D60D6",
              "Arn"
            ]
          }
        },
        "ProvisioningRoleArn": {
          "Fn::GetAtt": [
            "cmsprovisioningiotprovisioningtemplateconstructiotcoreprovisioningrole710867EB",
            "Arn"
          ]
        },
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "TemplateBody": {
          "Fn::Join": [
            "",
            [
              "{\"Parameters\": {\"AWS::IoT::Certificate::Id\": {\"Type\": \"String\"}, \"vin\": {\"Type\": \"String\"}}, \"Mappings\": {}, \"Resources\": {\"thing\": {\"Type\": \"AWS::IoT::Thing\", \"Properties\": {\"ThingName\": {\"Fn::Join\": [\"\", [\"Vehicle_\", {\"Ref\": \"vin\"}]]}, \"AttributePayload\": {\"vin\": {\"Ref\": \"vin\"}, \"certificate_id\": {\"Ref\": \"AWS::IoT::Certificate::Id\"}, \"provisioned_by_template\": \"",
              {
                "Ref": "AppUniqueId"
              },
              "--provisioning-template\"}}, \"OverrideSettings\": {\"AttributePayload\": \"MERGE\", \"ThingTypeName\": \"REPLACE\", \"ThingGroups\": \"DO_NOTHING\"}}, \"certificate\": {\"Type\": \"AWS::IoT::Certificate\", \"Properties\": {\"CertificateId\": {\"Ref\": \"AWS::IoT::Certificate::Id\"}, \"Status\": \"Active\"}, \"OverrideSettings\": {\"Status\": \"REPLACE\"}}, \"policy\": {\"Type\": \"AWS::IoT::Policy\", \"Properties\": {\"PolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Action\": [\"iot:Subscribe\", \"iot:Receive\"], \"Resource\": \"arn:aws:iot:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":*\"}, {\"Effect\": \"Allow\", \"Action\": \"iot:Publish\", \"Resource\": [\"arn:aws:iot:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":topic/vehicle/*\", \"arn:aws:iot:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":topic/vehicleactive/*\"]}, {\"Effect\": \"Allow\", \"Action\": \"iot:Connect\", \"Resource\": \"arn:aws:iot:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":client/${iot:Connection.Thing.ThingName}\"}]}}}}, \"DeviceConfiguration\": {}}"
            ]
          ]
        },
        "TemplateName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "--provisioning-template"
            ]
          ]
        }
      },
      "Type": "AWS::IoT::ProvisioningTemplate"
    },
    "cmsprovisioningiotprovisioningtemplateconstructiotcoreprovisioningrole710867EB": {
      "DependsOn": [
        "cmsprovisioningpreprovisioningconstructlambdafunctioniotinvokepreprovisioninglambdapermissionAE00A3BF",
        "cmsprovisioningpreprovisioningconstructlambdafunctionLogRetention47CBD589",
        "cmsprovisioningpreprovisioningconstructlambdafunction778D60D6",
        "cmsprovisioningpreprovisioningconstructlambdarole0B457706",
        "cmsprovisioningpreprovisioningconstructsecuritygroupC7FFCBC4",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "iot.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "iot:RegisterThing",
                    "iot:CreatePolicy"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "iot:AttachPrincipalPolicy",
                    "iot:AttachThingPrincipal",
                    "iot:DescribeCertificate",
                    "iot:UpdateCertificate"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":cert/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "iot:CreateThing",
                    "iot:DescribeThing",
                    "iot:ListThingGroupsForThing",
                    "iot:UpdateThing"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":thing/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "provisioning-template-policy"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmsprovisioningpostprovisioningconstructcustomresourcepolicyB609D4F8": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iot:UpdateEventConfigurations",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "cmsprovisioningpostprovisioningconstructcustomresourcepolicyB609D4F8",
        "Roles": [
          {
            "Ref": "cmsprovisioningcustomresourcelambdaconstructlambdaroleCDCF3E1C"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "cmsprovisioningpostprovisioningconstructiotpostprovisioninglambdarule9BEB9C2E": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "RuleName": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::Join": [
                  "_",
                  {
                    "Fn::Split": [
                      "-",
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "AppUniqueId"
                            },
                            "_test-module-short-name"
                          ]
                        ]
                      }
                    ]
                  }
                ]
              },
              "_iot_post_provisioning"
            ]
          ]
        },
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "TopicRulePayload": {
          "Actions": [
            {
              "Lambda": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "cmsprovisioningpostprovisioningconstructlambdafunction11065576",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "Description": "Trigger lambda to insert ProvisionedVehicles record on successful thing creation or update (triggered by RegisterThing).",
          "Sql": "SELECT * FROM '$aws/events/thing/+/+'"
        }
      },
      "Type": "AWS::IoT::TopicRule"
    },
    "cmsprovisioningpostprovisioningconstructlambdafunction11065576": {
      "DependsOn": [
        "cmsprovisioningpostprovisioningconstructlambdarole34C8FE32",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Description": "CMS Provisioning post-provisioning lambda function",
        "Environment": {
          "Variables": {
            "PROVISIONED_VEHICLES_TABLE_NAME": {
              "Ref": "cmsprovisioningprovisioningdatabaseconstructprovisionedvehiclestable22CC62F9"
            },
            "PROVISIONING_TEMPLATE_NAME": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AppUniqueId"
                  },
                  "--provisioning-template"
                ]
              ]
            },
            "USER_AGENT_STRING": "AWSSOLUTION/test-solution-id/test-solution-version AWSSOLUTION-CAPABILITY/test-capability-id/test-solution-version"
          }
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-post-provisioning"
            ]
          ]
        },
        "Handler": "function.post_provision.handler",
        "Layers": [
          {
            "Ref": "cmsprovisioningdependencylayerconstructlambdadependencylayerversion039423A0"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "cmsprovisioningpostprovisioningconstructlambdarole34C8FE32",
            "Arn"
          ]
        },
        "Runtime": "python3.12",
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "cmsprovisioningpostprovisioningconstructsecuritygroup2AC8D3D0",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/1}}"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/2}}"
                ]
              ]
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Function"
    },
    "cmsprovisioningpostprovisioningconstructlambdafunctionLogRetentionDE1C3AB8": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "cmsprovisioningpostprovisioningconstructlambdafunction11065576"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "cmsprovisioningpostprovisioningconstructlambdafunctioniotinvokepostprovisioninglambdapermission15F65150": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cmsprovisioningpostprovisioningconstructlambdafunction11065576",
            "Arn"
          ]
        },
        "Principal": "iot.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "cmsprovisioningpostprovisioningconstructlambdarole34C8FE32": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "iot:DetachPolicy",
                    "iot:DeleteCertificate"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":cert/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "iot:ListAttachedPolicies",
                    "iot:ListCertificates",
                    "iot:DetachThingPrincipal"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "iot-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-post-provisioning"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-post-provisioning:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-logs-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:UpdateItem"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/",
                        {
                          "Ref": "cmsprovisioningprovisioningdatabaseconstructprovisionedvehiclestable22CC62F9"
                        }
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:GenerateDataKey"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":kms:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":key/",
                        {
                          "Ref": "cmsprovisioningprovisioningdatabaseconstructprovisionedvehiclestablekmskeyB9F9B859"
                        }
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dynamodb-provisioned-vehicles-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "ec2:CreateNetworkInterfacePermission",
                  "Condition": {
                    "StringEquals": {
                      "ec2:AuthorizedService": "lambda.amazonaws.com",
                      "ec2:Subnet": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/1}}"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/2}}"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":ec2:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":network-interface/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:CreateNetworkInterface",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "ec2-vpc-policy"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmsprovisioningpostprovisioningconstructsecuritygroup2AC8D3D0": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "GroupDescription": "Default/cms-provisioning-stack/cms-provisioning/post-provisioning-construct/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Fn::GetAtt": [
                  "moduleinputsconstructvpcnamecustomresource12726E51",
                  "parameter_value"
                ]
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmsprovisioningpostprovisioningconstructupdateeventconfigurations6FD30B54": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "cmsprovisioningpostprovisioningconstructcustomresourcepolicyB609D4F8",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Resource": "UpdateEventConfigurations",
        "ServiceToken": {
          "Fn::GetAtt": [
            "cmsprovisioningcustomresourcelambdaconstructlambdafunction1099C83F",
            "Arn"
          ]
        }
      },
      "Type": "Custom::UpdateEventConfigurations",
      "UpdateReplacePolicy": "Delete"
    },
    "cmsprovisioningpreprovisioningconstructlambdafunction778D60D6": {
      "DependsOn": [
        "cmsprovisioningpreprovisioningconstructlambdarole0B457706",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Description": "CMS Provisioning pre-provisioning lambda function",
        "Environment": {
          "Variables": {
            "AUTHORIZED_VEHICLES_TABLE_NAME": {
              "Ref": "cmsprovisioningprovisioningdatabaseconstructauthorizedvehiclestable87F60C78"
            },
            "PROVISIONED_VEHICLES_TABLE_NAME": {
              "Ref": "cmsprovisioningprovisioningdatabaseconstructprovisionedvehiclestable22CC62F9"
            },
            "USER_AGENT_STRING": "AWSSOLUTION/test-solution-id/test-solution-version AWSSOLUTION-CAPABILITY/test-capability-id/test-solution-version"
          }
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-pre-provisioning"
            ]
          ]
        },
        "Handler": "function.pre_provision.handler",
        "Layers": [
          {
            "Ref": "cmsprovisioningdependencylayerconstructlambdadependencylayerversion039423A0"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "cmsprovisioningpreprovisioningconstructlambdarole0B457706",
            "Arn"
          ]
        },
        "Runtime": "python3.12",
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "cmsprovisioningpreprovisioningconstructsecuritygroupC7FFCBC4",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/1}}"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/2}}"
                ]
              ]
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Function"
    },
    "cmsprovisioningpreprovisioningconstructlambdafunctionLogRetention47CBD589": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "cmsprovisioningpreprovisioningconstructlambdafunction778D60D6"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "cmsprovisioningpreprovisioningconstructlambdafunctioniotinvokepreprovisioninglambdapermissionAE00A3BF": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cmsprovisioningpreprovisioningconstructlambdafunction778D60D6",
            "Arn"
          ]
        },
        "Principal": "iot.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "cmsprovisioningpreprovisioningconstructlambdarole0B457706": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "iot:UpdateCertificate",
                    "iot:DeleteCertificate"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iot:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":cert/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "iot-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-pre-provisioning"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-pre-provisioning:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-logs-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/",
                        {
                          "Ref": "cmsprovisioningprovisioningdatabaseconstructprovisionedvehiclestable22CC62F9"
                        }
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:GenerateDataKey"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":kms:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":key/",
                        {
                          "Ref": "cmsprovisioningprovisioningdatabaseconstructprovisionedvehiclestablekmskeyB9F9B859"
                        }
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dynamodb-provisioned-vehicles-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "dynamodb:GetItem",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/",
                        {
                          "Ref": "cmsprovisioningprovisioningdatabaseconstructauthorizedvehiclestable87F60C78"
                        }
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:DescribeKey"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":kms:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":key/",
                        {
                          "Ref": "cmsprovisioningprovisioningdatabaseconstructauthorizedvehiclestablekmskey496B1EC7"
                        }
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "dynamodb-authorized-vehicles-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "ec2:CreateNetworkInterfacePermission",
                  "Condition": {
                    "StringEquals": {
                      "ec2:AuthorizedService": "lambda.amazonaws.com",
                      "ec2:Subnet": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/1}}"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/2}}"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":ec2:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":network-interface/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:CreateNetworkInterface",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "ec2-vpc-policy"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmsprovisioningpreprovisioningconstructsecuritygroupC7FFCBC4": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "GroupDescription": "Default/cms-provisioning-stack/cms-provisioning/pre-provisioning-construct/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Fn::GetAtt": [
                  "moduleinputsconstructvpcnamecustomresource12726E51",
                  "parameter_value"
                ]
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmsprovisioningprovisioningdatabaseconstructauthorizedvehiclestable87F60C78": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "vin",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "vin",
            "KeyType": "HASH"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "SSESpecification": {
          "KMSMasterKeyId": {
            "Fn::GetAtt": [
              "cmsprovisioningprovisioningdatabaseconstructauthorizedvehiclestablekmskey496B1EC7",
              "Arn"
            ]
          },
          "SSEEnabled": true,
          "SSEType": "KMS"
        },
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain"
    },
    "cmsprovisioningprovisioningdatabaseconstructauthorizedvehiclestablekmskey496B1EC7": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain"
    },
    "cmsprovisioningprovisioningdatabaseconstructprovisionedvehiclestable22CC62F9": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "vin",
            "AttributeType": "S"
          },
          {
            "AttributeName": "certificate_id",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "vin",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "certificate_id",
            "KeyType": "RANGE"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "SSESpecification": {
          "KMSMasterKeyId": {
            "Fn::GetAtt": [
              "cmsprovisioningprovisioningdatabaseconstructprovisionedvehiclestablekmskeyB9F9B859",
              "Arn"
            ]
          },
          "SSEEnabled": true,
          "SSEType": "KMS"
        },
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain"
    },
    "cmsprovisioningprovisioningdatabaseconstructprovisionedvehiclestablekmskeyB9F9B859": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "awsApplication",
            "Value": {
              "Fn::GetAtt": [
                "appregistryconstructappregistryapplicationAC1A319B",
                "ApplicationTagValue"
              ]
            }
          },
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain"
    },
    "moduleinputsconstructvpcnamecustomresource12726E51": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ParameterName": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/config/vpc/name"
            ]
          ]
        },
        "Resource": "SsmParameters",
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/config/aws-resource-lookup-lambda/arn}}"
            ]
          ]
        }
      },
      "Type": "Custom::SsmParameters",
      "UpdateReplacePolicy": "Delete"
    },
    "ssmappuniqueidregistermodule9C5C2C5D": {
      "Properties": {
        "Description": "SSM parameter to register a module with an app unique ID.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/test-module-short-name"
            ]
          ]
        },
        "Tags": {
          "awsApplication": {
            "Fn::GetAtt": [
              "appregistryconstructappregistryapplicationAC1A319B",
              "ApplicationTagValue"
            ]
          }
        },
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "}}"
            ]
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}
