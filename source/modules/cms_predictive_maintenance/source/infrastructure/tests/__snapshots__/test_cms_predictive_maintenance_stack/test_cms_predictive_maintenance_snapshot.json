{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x"
      },
      "ap-east-1": {
        "value": "nodejs20.x"
      },
      "ap-northeast-1": {
        "value": "nodejs20.x"
      },
      "ap-northeast-2": {
        "value": "nodejs20.x"
      },
      "ap-northeast-3": {
        "value": "nodejs20.x"
      },
      "ap-south-1": {
        "value": "nodejs20.x"
      },
      "ap-south-2": {
        "value": "nodejs20.x"
      },
      "ap-southeast-1": {
        "value": "nodejs20.x"
      },
      "ap-southeast-2": {
        "value": "nodejs20.x"
      },
      "ap-southeast-3": {
        "value": "nodejs20.x"
      },
      "ap-southeast-4": {
        "value": "nodejs20.x"
      },
      "ap-southeast-5": {
        "value": "nodejs20.x"
      },
      "ap-southeast-7": {
        "value": "nodejs20.x"
      },
      "ca-central-1": {
        "value": "nodejs20.x"
      },
      "ca-west-1": {
        "value": "nodejs20.x"
      },
      "cn-north-1": {
        "value": "nodejs20.x"
      },
      "cn-northwest-1": {
        "value": "nodejs20.x"
      },
      "eu-central-1": {
        "value": "nodejs20.x"
      },
      "eu-central-2": {
        "value": "nodejs20.x"
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x"
      },
      "eu-north-1": {
        "value": "nodejs20.x"
      },
      "eu-south-1": {
        "value": "nodejs20.x"
      },
      "eu-south-2": {
        "value": "nodejs20.x"
      },
      "eu-west-1": {
        "value": "nodejs20.x"
      },
      "eu-west-2": {
        "value": "nodejs20.x"
      },
      "eu-west-3": {
        "value": "nodejs20.x"
      },
      "il-central-1": {
        "value": "nodejs20.x"
      },
      "me-central-1": {
        "value": "nodejs20.x"
      },
      "me-south-1": {
        "value": "nodejs20.x"
      },
      "mx-central-1": {
        "value": "nodejs20.x"
      },
      "sa-east-1": {
        "value": "nodejs20.x"
      },
      "us-east-1": {
        "value": "nodejs20.x"
      },
      "us-east-2": {
        "value": "nodejs20.x"
      },
      "us-gov-east-1": {
        "value": "nodejs20.x"
      },
      "us-gov-west-1": {
        "value": "nodejs20.x"
      },
      "us-iso-east-1": {
        "value": "nodejs18.x"
      },
      "us-iso-west-1": {
        "value": "nodejs18.x"
      },
      "us-isob-east-1": {
        "value": "nodejs18.x"
      },
      "us-west-1": {
        "value": "nodejs20.x"
      },
      "us-west-2": {
        "value": "nodejs20.x"
      }
    },
    "Solution": {
      "AssetsConfig": {
        "S3AssetBucketBaseName": "test-bucket-base-name",
        "S3AssetKeyPrefix": "test-object-key-prefix"
      }
    }
  },
  "Outputs": {
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiEndpoint375D781A": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiDeploymentStageprodFBE2AA0A"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "AppUniqueId": {
      "AllowedPattern": "^(?!-)[a-z0-9-]+(?<!-)$",
      "ConstraintDescription": "AppUniqueId must contain min 3 and max 10 characters, and contain only lowercase alphanumeric characters and dashes.",
      "Description": "Application unique identifier used to uniquely name resources within the stack.",
      "MaxLength": 10,
      "MinLength": 3,
      "Type": "String"
    },
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>"
    },
    "S3LogExpirationDays": {
      "Default": 90,
      "Description": "The number of days before log bucket objects expire.",
      "Type": "Number"
    },
    "S3LogNoncurrentVersionExpirationDays": {
      "Default": 1,
      "Description": "The number of days before log bucket non-current versions are deleted after they've expired.",
      "Type": "Number"
    }
  },
  "Resources": {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn"
          ]
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region"
            },
            "value"
          ]
        },
        "Timeout": 900
      },
      "Type": "AWS::Lambda::Function"
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "cmspredictivemaintenanceagentactiongroupconstructlambdafunctionA0EFD591": {
      "DependsOn": [
        "cmspredictivemaintenanceagentactiongroupconstructlambdaroleD00E4A89",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Environment": {
          "Variables": {
            "INFERENCE_DATA_S3_BUCKET_NAME": {
              "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
            },
            "INFERENCE_INPUT_DATA_S3_KEY": "inference/latest.csv",
            "INFERENCE_OUTPUT_DATA_S3_KEY": "inference/latest.csv.out",
            "USER_AGENT_STRING": "AWSSOLUTION/test-solution-id/test-solution-version AWSSOLUTION-CAPABILITY/test-capability-id/test-solution-version"
          }
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-action-group"
            ]
          ]
        },
        "Handler": "function.main.handler",
        "Layers": [
          {
            "Ref": "cmspredictivemaintenancedependencylayerconstructlambdadependencylayerversion4CEC1EF0"
          }
        ],
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "cmspredictivemaintenanceagentactiongroupconstructlambdaroleD00E4A89",
            "Arn"
          ]
        },
        "Runtime": "python3.12",
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "cmspredictivemaintenanceagentactiongroupconstructsecuritygroupF3AC066B",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/1}}"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/2}}"
                ]
              ]
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Function"
    },
    "cmspredictivemaintenanceagentactiongroupconstructlambdafunctionInvokeu1TDdDMoLpes23omAp0kUXOcNSkFsO0n9KPkoXL686A69B110": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cmspredictivemaintenanceagentactiongroupconstructlambdafunctionA0EFD591",
            "Arn"
          ]
        },
        "Principal": "bedrock.amazonaws.com"
      },
      "Type": "AWS::Lambda::Permission"
    },
    "cmspredictivemaintenanceagentactiongroupconstructlambdafunctionLogRetention0D1FADB1": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "cmspredictivemaintenanceagentactiongroupconstructlambdafunctionA0EFD591"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "cmspredictivemaintenanceagentactiongroupconstructlambdaroleD00E4A89": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-action-group"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-action-group:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "lambda-logs-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "ec2:CreateNetworkInterfacePermission",
                  "Condition": {
                    "StringEquals": {
                      "ec2:AuthorizedService": "lambda.amazonaws.com",
                      "ec2:Subnet": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/1}}"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/2}}"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":ec2:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":network-interface/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:CreateNetworkInterface",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "ec2-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListBucket",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":s3:::",
                        {
                          "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
                        }
                      ]
                    ]
                  }
                },
                {
                  "Action": "s3:GetObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":s3:::",
                        {
                          "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
                        },
                        "/inference/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "prediction-results-s3-policy"
          }
        ],
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmspredictivemaintenanceagentactiongroupconstructsecuritygroupF3AC066B": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "GroupDescription": "Default/cms-predictive-maintenance/cms-predictive-maintenance/agent-action-group-construct/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Fn::GetAtt": [
                  "moduleinputsconstructvpcnamecustomresource12726E51",
                  "parameter_value"
                ]
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmspredictivemaintenanceauthorizationlambdaconstructlambdafunction4C6F29BC": {
      "DependsOn": [
        "cmspredictivemaintenanceauthorizationlambdaconstructlambdaroleD96E9E75",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Description": "CMS Predictive Maintenance APIs authorization lambda function",
        "Environment": {
          "Variables": {
            "TOKEN_VALIDATION_LAMBDA_ARN": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/auth/token-validation-lambda/arn}}"
                ]
              ]
            },
            "USER_AGENT_STRING": "AWSSOLUTION/test-solution-id/test-solution-version AWSSOLUTION-CAPABILITY/test-capability-id/test-solution-version"
          }
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-authorization"
            ]
          ]
        },
        "Handler": "function.main.handler",
        "Layers": [
          {
            "Ref": "cmspredictivemaintenancedependencylayerconstructlambdadependencylayerversion4CEC1EF0"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "cmspredictivemaintenanceauthorizationlambdaconstructlambdaroleD96E9E75",
            "Arn"
          ]
        },
        "Runtime": "python3.12",
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "cmspredictivemaintenanceauthorizationlambdaconstructsecuritygroup18D4826A",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/1}}"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/2}}"
                ]
              ]
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Function"
    },
    "cmspredictivemaintenanceauthorizationlambdaconstructlambdafunctionLogRetentionFD379A00": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "cmspredictivemaintenanceauthorizationlambdaconstructlambdafunction4C6F29BC"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "cmspredictivemaintenanceauthorizationlambdaconstructlambdafunctioncmspredictivemaintenancepredictapiconstructrestapiauthorizerC7A00D05Permissions90C07A1F": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cmspredictivemaintenanceauthorizationlambdaconstructlambdafunction4C6F29BC",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
              },
              "/authorizers/",
              {
                "Ref": "cmspredictivemaintenancepredictapiconstructrestapiauthorizer20AC4B2B"
              }
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "cmspredictivemaintenanceauthorizationlambdaconstructlambdaroleD96E9E75": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-authorization"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-authorization:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "{{resolve:ssm:/solution/",
                        {
                          "Ref": "AppUniqueId"
                        },
                        "/auth/token-validation-lambda/arn}}"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "lambda-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "ec2:CreateNetworkInterfacePermission",
                  "Condition": {
                    "StringEquals": {
                      "ec2:AuthorizedService": "lambda.amazonaws.com",
                      "ec2:Subnet": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/1}}"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/2}}"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":ec2:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":network-interface/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:CreateNetworkInterface",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "ec2-vpc-policy"
          }
        ],
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmspredictivemaintenanceauthorizationlambdaconstructsecuritygroup18D4826A": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "GroupDescription": "Default/cms-predictive-maintenance/cms-predictive-maintenance/authorization-lambda-construct/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Fn::GetAtt": [
                  "moduleinputsconstructvpcnamecustomresource12726E51",
                  "parameter_value"
                ]
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmspredictivemaintenancecdklambdasvpcconstructsecuritygroup74503C58": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "GroupDescription": "Default/cms-predictive-maintenance/cms-predictive-maintenance/cdk-lambdas-vpc-construct/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Fn::GetAtt": [
                  "moduleinputsconstructvpcnamecustomresource12726E51",
                  "parameter_value"
                ]
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmspredictivemaintenancechatbotconstructbedrockagentconstructagentE962E37C": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "ActionGroups": [
          {
            "ActionGroupExecutor": {
              "Lambda": {
                "Fn::GetAtt": [
                  "cmspredictivemaintenanceagentactiongroupconstructlambdafunctionA0EFD591",
                  "Arn"
                ]
              }
            },
            "ActionGroupName": "vehicle-maintenance-status",
            "ActionGroupState": "ENABLED",
            "ApiSchema": {
              "Payload": "{\"openapi\": \"3.0.3\", \"info\": {\"title\": \"Powertools API\", \"version\": \"1.0.0\"}, \"servers\": [{\"url\": \"/\"}], \"paths\": {\"/vehicle_maintenance_status\": {\"get\": {\"summary\": \"GET /vehicle_maintenance_status\", \"description\": \"Gets the maintenance status of a vehicle with a given VIN.\", \"operationId\": \"get_vehicle_maintenance_status_vehicle_maintenance_status_get\", \"parameters\": [{\"description\": \"Vehicle VIN number.\", \"required\": true, \"schema\": {\"type\": \"string\"}, \"name\": \"vin\", \"in\": \"query\"}], \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"type\": \"boolean\", \"title\": \"Return\"}}}}}}}}}"
            }
          }
        ],
        "AgentName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-agent"
            ]
          ]
        },
        "AgentResourceRoleArn": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancechatbotconstructbedrockagentconstructrole39F024E6",
            "Arn"
          ]
        },
        "AutoPrepare": true,
        "CustomerEncryptionKeyArn": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancechatbotconstructbedrockagentconstructagentcmkkeyA6376A88",
            "Arn"
          ]
        },
        "FoundationModel": "anthropic.claude-3-sonnet-20240229-v1:0",
        "GuardrailConfiguration": {
          "GuardrailIdentifier": {
            "Fn::GetAtt": [
              "cmspredictivemaintenancechatbotconstructbedrockagentconstructguardrail8359B238",
              "GuardrailId"
            ]
          },
          "GuardrailVersion": "DRAFT"
        },
        "IdleSessionTTLInSeconds": 300,
        "Instruction": "You are a friendly and useful agent that answers questions about vehicles, vehicle maintenance, vehicle repair, and related topics. Use the knowledge bases and functions to answer the queries when needed but do not reveal any internal details about the knowledge bases and functions.",
        "KnowledgeBases": [
          {
            "Description": "Knowledge Base used to perform RAG.",
            "KnowledgeBaseId": {
              "Fn::GetAtt": [
                "cmspredictivemaintenancechatbotconstructbedrockknowledgebaseconstructknowledgebase268FC97C",
                "KnowledgeBaseId"
              ]
            },
            "KnowledgeBaseState": "ENABLED"
          }
        ],
        "SkipResourceInUseCheckOnDelete": true,
        "Tags": {
          "Solutions:DeploymentUUID": {
            "Fn::Join": [
              "",
              [
                "{{resolve:ssm:/solution/",
                {
                  "Ref": "AppUniqueId"
                },
                "/config/deployment-uuid}}"
              ]
            ]
          }
        }
      },
      "Type": "AWS::Bedrock::Agent"
    },
    "cmspredictivemaintenancechatbotconstructbedrockagentconstructagentaliasE7C26A43": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AgentAliasName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-default-alias"
            ]
          ]
        },
        "AgentId": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancechatbotconstructbedrockagentconstructagentE962E37C",
            "AgentId"
          ]
        },
        "Tags": {
          "Solutions:DeploymentUUID": {
            "Fn::Join": [
              "",
              [
                "{{resolve:ssm:/solution/",
                {
                  "Ref": "AppUniqueId"
                },
                "/config/deployment-uuid}}"
              ]
            ]
          }
        }
      },
      "Type": "AWS::Bedrock::AgentAlias"
    },
    "cmspredictivemaintenancechatbotconstructbedrockagentconstructagentcmkkeyA6376A88": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain"
    },
    "cmspredictivemaintenancechatbotconstructbedrockagentconstructguardrail8359B238": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "BlockedInputMessaging": "Sorry, the model cannot answer this question.",
        "BlockedOutputsMessaging": "Sorry, the model cannot answer this question.",
        "ContentPolicyConfig": {
          "FiltersConfig": [
            {
              "InputStrength": "HIGH",
              "OutputStrength": "HIGH",
              "Type": "HATE"
            },
            {
              "InputStrength": "HIGH",
              "OutputStrength": "HIGH",
              "Type": "INSULTS"
            },
            {
              "InputStrength": "HIGH",
              "OutputStrength": "HIGH",
              "Type": "SEXUAL"
            },
            {
              "InputStrength": "HIGH",
              "OutputStrength": "HIGH",
              "Type": "VIOLENCE"
            },
            {
              "InputStrength": "HIGH",
              "OutputStrength": "HIGH",
              "Type": "MISCONDUCT"
            },
            {
              "InputStrength": "HIGH",
              "OutputStrength": "NONE",
              "Type": "PROMPT_ATTACK"
            }
          ]
        },
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancechatbotconstructbedrockagentconstructguardrailcmkkeyAD04C0AC",
            "Arn"
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-guardrail"
            ]
          ]
        },
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::Bedrock::Guardrail"
    },
    "cmspredictivemaintenancechatbotconstructbedrockagentconstructguardrailcmkkeyAD04C0AC": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain"
    },
    "cmspredictivemaintenancechatbotconstructbedrockagentconstructrole39F024E6": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "bedrock.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "bedrock:InvokeModel",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":bedrock:",
                        {
                          "Ref": "AWS::Region"
                        },
                        "::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "foundational-model"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "bedrock:Retrieve",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":bedrock:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":knowledge-base/",
                        {
                          "Fn::GetAtt": [
                            "cmspredictivemaintenancechatbotconstructbedrockknowledgebaseconstructknowledgebase268FC97C",
                            "KnowledgeBaseId"
                          ]
                        }
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "knowledge-base"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "cmspredictivemaintenanceagentactiongroupconstructlambdafunctionA0EFD591",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "action-group"
          }
        ],
        "RoleName": {
          "Fn::Join": [
            "",
            [
              "AmazonBedrockExecutionRoleForAgents-",
              {
                "Ref": "AppUniqueId"
              },
              "-",
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmspredictivemaintenancechatbotconstructbedrockdatasourceconstructbedrockpolicy440C25AD": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:ListBucket",
              "Condition": {
                "StringEquals": {
                  "aws:ResourceAccount": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::",
                    {
                      "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
                    }
                  ]
                ]
              }
            },
            {
              "Action": "s3:GetObject",
              "Condition": {
                "StringEquals": {
                  "aws:ResourceAccount": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::",
                    {
                      "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
                    },
                    "/predictive-maintenance/docs/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "cmspredictivemaintenancechatbotconstructbedrockdatasourceconstructbedrockpolicy440C25AD",
        "Roles": [
          {
            "Ref": "cmspredictivemaintenancechatbotconstructbedrockroleconstructiamroleB444FFCB"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "cmspredictivemaintenancechatbotconstructbedrockdatasourceconstructcustomresourcepolicy18C3D19F": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "bedrock:StartIngestionJob",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "cmspredictivemaintenancechatbotconstructbedrockdatasourceconstructcustomresourcepolicy18C3D19F",
        "Roles": [
          {
            "Ref": "cmspredictivemaintenancecustomresourcelambdaconstructlambdarole5C24959F"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "cmspredictivemaintenancechatbotconstructbedrockdatasourceconstructdatasource0B402DAF": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "DataSourceConfiguration": {
          "S3Configuration": {
            "BucketArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":s3:::",
                  {
                    "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
                  }
                ]
              ]
            },
            "BucketOwnerAccountId": {
              "Ref": "AWS::AccountId"
            },
            "InclusionPrefixes": [
              "predictive-maintenance/docs"
            ]
          },
          "Type": "S3"
        },
        "KnowledgeBaseId": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancechatbotconstructbedrockknowledgebaseconstructknowledgebase268FC97C",
            "KnowledgeBaseId"
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-data-source"
            ]
          ]
        },
        "VectorIngestionConfiguration": {
          "ChunkingConfiguration": {
            "ChunkingStrategy": "FIXED_SIZE",
            "FixedSizeChunkingConfiguration": {
              "MaxTokens": 512,
              "OverlapPercentage": 20
            }
          }
        }
      },
      "Type": "AWS::Bedrock::DataSource"
    },
    "cmspredictivemaintenancechatbotconstructbedrockdatasourceconstructingestbedrockdatasourcecustomresource38CB450A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "cmspredictivemaintenancechatbotconstructbedrockdatasourceconstructcustomresourcepolicy18C3D19F",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "DataSourceId": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancechatbotconstructbedrockdatasourceconstructdatasource0B402DAF",
            "DataSourceId"
          ]
        },
        "KnowledgeBaseId": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancechatbotconstructbedrockknowledgebaseconstructknowledgebase268FC97C",
            "KnowledgeBaseId"
          ]
        },
        "Resource": "IngestBedrockDataSource",
        "ServiceToken": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancecustomresourcelambdaconstructlambdafunctionE0665B5E",
            "Arn"
          ]
        }
      },
      "Type": "Custom::IngestBedrockDataSource",
      "UpdateReplacePolicy": "Delete"
    },
    "cmspredictivemaintenancechatbotconstructbedrockknowledgebaseconstructbedrockpolicyE0A24CE2": {
      "DependsOn": [
        "cmspredictivemaintenancechatbotconstructvectorindexconstructcustomresourcepolicy59A9E5BC",
        "cmspredictivemaintenancechatbotconstructvectorindexconstructmanageaossvectorindexcustomresource47577859",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "aoss:APIAccessAll",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":aoss:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":collection/",
                    {
                      "Fn::GetAtt": [
                        "cmspredictivemaintenancechatbotconstructvectordbcollectionconstructaosscollectionAA5E634A",
                        "Id"
                      ]
                    }
                  ]
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:bedrock:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":knowledge-base/*"
                      ]
                    ]
                  }
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId"
                  }
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "bedrock:InvokeModel",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":bedrock:",
                    {
                      "Ref": "AWS::Region"
                    },
                    "::foundation-model/cohere.embed-english-v3"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "cmspredictivemaintenancechatbotconstructbedrockknowledgebaseconstructbedrockpolicyE0A24CE2",
        "Roles": [
          {
            "Ref": "cmspredictivemaintenancechatbotconstructbedrockroleconstructiamroleB444FFCB"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "cmspredictivemaintenancechatbotconstructbedrockknowledgebaseconstructknowledgebase268FC97C": {
      "DependsOn": [
        "cmspredictivemaintenancechatbotconstructbedrockknowledgebaseconstructbedrockpolicyE0A24CE2",
        "cmspredictivemaintenancechatbotconstructvectorindexconstructcustomresourcepolicy59A9E5BC",
        "cmspredictivemaintenancechatbotconstructvectorindexconstructmanageaossvectorindexcustomresource47577859",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "KnowledgeBaseConfiguration": {
          "Type": "VECTOR",
          "VectorKnowledgeBaseConfiguration": {
            "EmbeddingModelArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":bedrock:",
                  {
                    "Ref": "AWS::Region"
                  },
                  "::foundation-model/cohere.embed-english-v3"
                ]
              ]
            }
          }
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-knowledge-base"
            ]
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancechatbotconstructbedrockroleconstructiamroleB444FFCB",
            "Arn"
          ]
        },
        "StorageConfiguration": {
          "OpensearchServerlessConfiguration": {
            "CollectionArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":aoss:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":collection/",
                  {
                    "Fn::GetAtt": [
                      "cmspredictivemaintenancechatbotconstructvectordbcollectionconstructaosscollectionAA5E634A",
                      "Id"
                    ]
                  }
                ]
              ]
            },
            "FieldMapping": {
              "MetadataField": "AMAZON_BEDROCK_METADATA",
              "TextField": "AMAZON_BEDROCK_TEXT_CHUNK",
              "VectorField": "default-vector"
            },
            "VectorIndexName": "default-index"
          },
          "Type": "OPENSEARCH_SERVERLESS"
        },
        "Tags": {
          "Solutions:DeploymentUUID": {
            "Fn::Join": [
              "",
              [
                "{{resolve:ssm:/solution/",
                {
                  "Ref": "AppUniqueId"
                },
                "/config/deployment-uuid}}"
              ]
            ]
          }
        }
      },
      "Type": "AWS::Bedrock::KnowledgeBase"
    },
    "cmspredictivemaintenancechatbotconstructbedrockroleconstructiamroleB444FFCB": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "bedrock.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": {
          "Fn::Join": [
            "",
            [
              "AmazonBedrockExecutionRoleForKnowledgeBase-",
              {
                "Ref": "AppUniqueId"
              },
              "-",
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmspredictivemaintenancechatbotconstructvectordbcollectionconstructaosscollectionAA5E634A": {
      "DependsOn": [
        "cmspredictivemaintenancechatbotconstructvectordbsecurityconstructaosscollectionencryptionpolicy24BA947A",
        "cmspredictivemaintenancechatbotconstructvectordbsecurityconstructaosscollectionnetworkpolicy733A9CE0",
        "cmspredictivemaintenancechatbotconstructvectordbsecurityconstructcustomresourcepolicy4069B218",
        "cmspredictivemaintenancechatbotconstructvectordbsecurityconstructmanageaossvpcendpointcustomresourceBA109271",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name- - collection"
            ]
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-"
            ]
          ]
        },
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "Type": "VECTORSEARCH"
      },
      "Type": "AWS::OpenSearchServerless::Collection"
    },
    "cmspredictivemaintenancechatbotconstructvectordbdataaccessconstructaosscollectiondataaccesspolicyA42CDAB3": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name- - data access policy"
            ]
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-"
            ]
          ]
        },
        "Policy": {
          "Fn::Join": [
            "",
            [
              "[{\"Rules\": [{\"Resource\": [\"collection/",
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-\"], \"Permission\": [\"aoss:DescribeCollectionItems\", \"aoss:CreateCollectionItems\", \"aoss:UpdateCollectionItems\"], \"ResourceType\": \"collection\"}, {\"Resource\": [\"index/",
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-/*\"], \"Permission\": [\"aoss:UpdateIndex\", \"aoss:DescribeIndex\", \"aoss:ReadDocument\", \"aoss:WriteDocument\", \"aoss:CreateIndex\", \"aoss:DeleteIndex\"], \"ResourceType\": \"index\"}], \"Principal\": [\"",
              {
                "Fn::GetAtt": [
                  "cmspredictivemaintenancecustomresourcelambdaconstructlambdarole5C24959F",
                  "Arn"
                ]
              },
              "\", \"",
              {
                "Fn::GetAtt": [
                  "cmspredictivemaintenancechatbotconstructbedrockroleconstructiamroleB444FFCB",
                  "Arn"
                ]
              },
              "\"], \"Description\": \"data access policy for opensearch collection\"}]"
            ]
          ]
        },
        "Type": "data"
      },
      "Type": "AWS::OpenSearchServerless::AccessPolicy"
    },
    "cmspredictivemaintenancechatbotconstructvectordbsecurityconstructaosscollectionencryptionpolicy24BA947A": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name- - encryption security policy"
            ]
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-"
            ]
          ]
        },
        "Policy": {
          "Fn::Join": [
            "",
            [
              "{\"Rules\": [{\"Resource\": [\"collection/",
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-\"], \"ResourceType\": \"collection\"}], \"AWSOwnedKey\": true}"
            ]
          ]
        },
        "Type": "encryption"
      },
      "Type": "AWS::OpenSearchServerless::SecurityPolicy"
    },
    "cmspredictivemaintenancechatbotconstructvectordbsecurityconstructaosscollectionnetworkpolicy733A9CE0": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name- - network security policy"
            ]
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-"
            ]
          ]
        },
        "Policy": {
          "Fn::Join": [
            "",
            [
              "[{\"Rules\": [{\"Resource\": [\"collection/",
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-\"], \"ResourceType\": \"dashboard\"}, {\"Resource\": [\"collection/",
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-\"], \"ResourceType\": \"collection\"}], \"AllowFromPublic\": false, \"SourceVPCEs\": [\"",
              {
                "Fn::GetAtt": [
                  "cmspredictivemaintenancechatbotconstructvectordbsecurityconstructmanageaossvpcendpointcustomresourceBA109271",
                  "vpce_id"
                ]
              },
              "\"], \"SourceServices\": [\"bedrock.amazonaws.com\"]}]"
            ]
          ]
        },
        "Type": "network"
      },
      "Type": "AWS::OpenSearchServerless::SecurityPolicy"
    },
    "cmspredictivemaintenancechatbotconstructvectordbsecurityconstructcustomresourcepolicy4069B218": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "aoss:ListVpcEndpoints",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "cmspredictivemaintenancechatbotconstructvectordbsecurityconstructcustomresourcepolicy4069B218",
        "Roles": [
          {
            "Ref": "cmspredictivemaintenancecustomresourcelambdaconstructlambdarole5C24959F"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "cmspredictivemaintenancechatbotconstructvectordbsecurityconstructmanageaossvpcendpointcustomresourceBA109271": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "cmspredictivemaintenancechatbotconstructvectordbsecurityconstructcustomresourcepolicy4069B218",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Resource": "GetAOSSVPCEndpointId",
        "ServiceToken": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancecustomresourcelambdaconstructlambdafunctionE0665B5E",
            "Arn"
          ]
        },
        "VpcEndpointName": {
          "Fn::Join": [
            "",
            [
              "aoss-{{resolve:ssm:/solution/vpc/",
              {
                "Fn::GetAtt": [
                  "moduleinputsconstructvpcnamecustomresource12726E51",
                  "parameter_value"
                ]
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "Custom::GetAOSSVPCEndpointId",
      "UpdateReplacePolicy": "Delete"
    },
    "cmspredictivemaintenancechatbotconstructvectorindexconstructcustomresourcepolicy59A9E5BC": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "aoss:APIAccessAll",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":aoss:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":collection/",
                    {
                      "Fn::GetAtt": [
                        "cmspredictivemaintenancechatbotconstructvectordbcollectionconstructaosscollectionAA5E634A",
                        "Id"
                      ]
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "cmspredictivemaintenancechatbotconstructvectorindexconstructcustomresourcepolicy59A9E5BC",
        "Roles": [
          {
            "Ref": "cmspredictivemaintenancecustomresourcelambdaconstructlambdarole5C24959F"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "cmspredictivemaintenancechatbotconstructvectorindexconstructmanageaossvectorindexcustomresource47577859": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "cmspredictivemaintenancechatbotconstructvectordbdataaccessconstructaosscollectiondataaccesspolicyA42CDAB3",
        "cmspredictivemaintenancechatbotconstructvectorindexconstructcustomresourcepolicy59A9E5BC",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AOSSCollectionId": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancechatbotconstructvectordbcollectionconstructaosscollectionAA5E634A",
            "Id"
          ]
        },
        "Resource": "ManageAOSSVectorIndex",
        "ServiceToken": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancecustomresourcelambdaconstructlambdafunctionE0665B5E",
            "Arn"
          ]
        },
        "VectorIndexConfigJsonStr": "{\"settings\": {\"index.knn\": \"true\"}, \"mappings\": {\"properties\": {\"default-vector\": {\"type\": \"knn_vector\", \"dimension\": 1024, \"method\": {\"name\": \"hnsw\", \"space_type\": \"l2\", \"engine\": \"faiss\", \"parameters\": {\"ef_construction\": 512, \"m\": 16}}}, \"AMAZON_BEDROCK_METADATA\": {\"type\": \"text\"}, \"AMAZON_BEDROCK_TEXT_CHUNK\": {\"type\": \"text\"}}}}",
        "VectorIndexName": "default-index"
      },
      "Type": "Custom::ManageAOSSVectorIndex",
      "UpdateReplacePolicy": "Delete"
    },
    "cmspredictivemaintenancecustomresourcelambdaconstructlambdafunctionE0665B5E": {
      "DependsOn": [
        "cmspredictivemaintenancecustomresourcelambdaconstructlambdarole5C24959F",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Environment": {
          "Variables": {
            "USER_AGENT_STRING": "AWSSOLUTION/test-solution-id/test-solution-version AWSSOLUTION-CAPABILITY/test-capability-id/test-solution-version"
          }
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-custom-resource"
            ]
          ]
        },
        "Handler": "function.main.handler",
        "Layers": [
          {
            "Ref": "cmspredictivemaintenancedependencylayerconstructlambdadependencylayerversion4CEC1EF0"
          }
        ],
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancecustomresourcelambdaconstructlambdarole5C24959F",
            "Arn"
          ]
        },
        "Runtime": "python3.12",
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "Timeout": 300,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "cmspredictivemaintenancecustomresourcelambdaconstructsecuritygroup6062633E",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/1}}"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/2}}"
                ]
              ]
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Function"
    },
    "cmspredictivemaintenancecustomresourcelambdaconstructlambdafunctionLogRetention215007C0": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "cmspredictivemaintenancecustomresourcelambdaconstructlambdafunctionE0665B5E"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "cmspredictivemaintenancecustomresourcelambdaconstructlambdarole5C24959F": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "appliesTo": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/<AppUniqueId>-test-module-short-name-custom-resource:log-stream:*",
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/<AcdpUniqueId>-test-module-short-name-custom-resource:log-stream:*"
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Log retention lambda uses policies that require wildcard permissions"
            },
            {
              "appliesTo": [
                "Resource::arn:<AWS::Partition>:ec2:<AWS::Region>:<AWS::AccountId>:network-interface/*",
                "Resource::*"
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "ec2 Network Interfaces permissions need to be wildcard"
            }
          ]
        }
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-custom-resource"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-custom-resource:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "lambda-logs-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "ec2:CreateNetworkInterfacePermission",
                  "Condition": {
                    "StringEquals": {
                      "ec2:AuthorizedService": "lambda.amazonaws.com",
                      "ec2:Subnet": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/1}}"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/2}}"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":ec2:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":network-interface/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:CreateNetworkInterface",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "ec2-policy"
          }
        ],
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmspredictivemaintenancecustomresourcelambdaconstructsecuritygroup6062633E": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "GroupDescription": "Default/cms-predictive-maintenance/cms-predictive-maintenance/custom-resource-lambda-construct/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Fn::GetAtt": [
                  "moduleinputsconstructvpcnamecustomresource12726E51",
                  "parameter_value"
                ]
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmspredictivemaintenancedependencylayerconstructlambdadependencylayerversion4CEC1EF0": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "CompatibleArchitectures": [
          "x86_64",
          "arm64"
        ],
        "CompatibleRuntimes": [
          "python3.12"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        }
      },
      "Type": "AWS::Lambda::LayerVersion"
    },
    "cmspredictivemaintenancemoduleoutputsconstructssmchatbotagentaliasidD0FDB4F3": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Description": "The Bedrock agent alias ID.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/test-module-short-name/chatbot/agent-alias-id"
            ]
          ]
        },
        "Tags": {
          "Solutions:DeploymentUUID": {
            "Fn::Join": [
              "",
              [
                "{{resolve:ssm:/solution/",
                {
                  "Ref": "AppUniqueId"
                },
                "/config/deployment-uuid}}"
              ]
            ]
          }
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancechatbotconstructbedrockagentconstructagentaliasE7C26A43",
            "AgentAliasId"
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "cmspredictivemaintenancemoduleoutputsconstructssmchatbotagentid96B58390": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Description": "The Bedrock agent ID.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/test-module-short-name/chatbot/agent-id"
            ]
          ]
        },
        "Tags": {
          "Solutions:DeploymentUUID": {
            "Fn::Join": [
              "",
              [
                "{{resolve:ssm:/solution/",
                {
                  "Ref": "AppUniqueId"
                },
                "/config/deployment-uuid}}"
              ]
            ]
          }
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancechatbotconstructbedrockagentconstructagentE962E37C",
            "AgentId"
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "cmspredictivemaintenancemoduleoutputsconstructssmchatbotknowledgebaseid38903DFC": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Description": "The Bedrock knowledge base ID used for RAG.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/test-module-short-name/chatbot/knowledge-base-id"
            ]
          ]
        },
        "Tags": {
          "Solutions:DeploymentUUID": {
            "Fn::Join": [
              "",
              [
                "{{resolve:ssm:/solution/",
                {
                  "Ref": "AppUniqueId"
                },
                "/config/deployment-uuid}}"
              ]
            ]
          }
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancechatbotconstructbedrockknowledgebaseconstructknowledgebase268FC97C",
            "KnowledgeBaseId"
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "cmspredictivemaintenancemoduleoutputsconstructssmpredictapiendpointurlF64DC879": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Description": "URL of the endpoint for the Predict APIs exposed by the module.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/test-module-short-name/api/predict/endpoint/url"
            ]
          ]
        },
        "Tags": {
          "Solutions:DeploymentUUID": {
            "Fn::Join": [
              "",
              [
                "{{resolve:ssm:/solution/",
                {
                  "Ref": "AppUniqueId"
                },
                "/config/deployment-uuid}}"
              ]
            ]
          }
        },
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
              },
              ".execute-api.",
              {
                "Ref": "AWS::Region"
              },
              ".",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiDeploymentStageprodFBE2AA0A"
              },
              "/"
            ]
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "cmspredictivemaintenancemoduleoutputsconstructssmpredictorpipelineassetsbucketname2360DE79": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Description": "The name of the S3 bucket created for the SageMaker pipeline.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/test-module-short-name/predictor/pipeline/assets-bucket/name"
            ]
          ]
        },
        "Tags": {
          "Solutions:DeploymentUUID": {
            "Fn::Join": [
              "",
              [
                "{{resolve:ssm:/solution/",
                {
                  "Ref": "AppUniqueId"
                },
                "/config/deployment-uuid}}"
              ]
            ]
          }
        },
        "Type": "String",
        "Value": {
          "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "cmspredictivemaintenancemoduleoutputsconstructssmpredictorpipelinedeploymodelendpointname4ABC0B17": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Description": "Name of the SageMaker endpoint to which the SageMaker prediction model is deployed.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/test-module-short-name/predictor/pipeline/deploy-model-endpoint/name"
            ]
          ]
        },
        "Tags": {
          "Solutions:DeploymentUUID": {
            "Fn::Join": [
              "",
              [
                "{{resolve:ssm:/solution/",
                {
                  "Ref": "AppUniqueId"
                },
                "/config/deployment-uuid}}"
              ]
            ]
          }
        },
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-endpoint"
            ]
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "cmspredictivemaintenancemoduleoutputsconstructssmpredictorpipelinedeploymodellambdafunctionarn7D5E4670": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Description": "ARN of the lambda function used to deploy SageMaker model to a SageMaker endpoint.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/test-module-short-name/predictor/pipeline/deploy-model-lambda/arn"
            ]
          ]
        },
        "Tags": {
          "Solutions:DeploymentUUID": {
            "Fn::Join": [
              "",
              [
                "{{resolve:ssm:/solution/",
                {
                  "Ref": "AppUniqueId"
                },
                "/config/deployment-uuid}}"
              ]
            ]
          }
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictorconstructsagemakerpipelinedeploypipelinemodellambdafunctionDB90CD10",
            "Arn"
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "cmspredictivemaintenancemoduleoutputsconstructssmpredictorpipelinerolearnC343F8FC": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Description": "The ARN of the role for the SageMaker pipeline.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/test-module-short-name/predictor/pipeline/role-arn"
            ]
          ]
        },
        "Tags": {
          "Solutions:DeploymentUUID": {
            "Fn::Join": [
              "",
              [
                "{{resolve:ssm:/solution/",
                {
                  "Ref": "AppUniqueId"
                },
                "/config/deployment-uuid}}"
              ]
            ]
          }
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictorconstructsagemakerpipelineroleDC833CE2",
            "Arn"
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaApiAccessLogGroup405C3907": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      },
      "Properties": {
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Description": "API to invoke the SageMaker prediction model.",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-rest-api"
            ]
          ]
        },
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::ApiGateway::RestApi"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiAccountA48D8B6F": {
      "DependsOn": [
        "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiCloudWatchRoleDEF8D902",
            "Arn"
          ]
        }
      },
      "Type": "AWS::ApiGateway::Account"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiCloudWatchRoleDEF8D902": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "IAM_NO_INLINE_POLICY_CHECK"
          ]
        }
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy"
          }
        ],
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiDeployment32FB8B4B2b65bce80405bad9c3ab291df4753f95": {
      "DependsOn": [
        "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApibatchpredictOPTIONSF5C2BB60",
        "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApibatchpredictPOST260C13B7",
        "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApibatchpredictB7E3036E",
        "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApipredictOPTIONS96115B2E",
        "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApipredictPOSTEE0899F2",
        "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApipredict8C94FC89",
        "cmspredictivemaintenancepredictapiconstructbadrequestbodyresponse45601189",
        "cmspredictivemaintenancepredictapiconstructbadrequestdefaultresponseFD648DA9",
        "cmspredictivemaintenancepredictapiconstructbadrequestparameterresponseDFD65C6A",
        "cmspredictivemaintenancepredictapiconstructgetpredictionbodymodel1F0BFB23",
        "cmspredictivemaintenancepredictapiconstructgetpredictionresponsemodel770CAEC1",
        "cmspredictivemaintenancepredictapiconstructinternalservererrordefaultresponse9D491934",
        "cmspredictivemaintenancepredictapiconstructrequestvalidatorF24DD2B8",
        "cmspredictivemaintenancepredictapiconstructstartbatchpredictionbodymodel517ED113",
        "cmspredictivemaintenancepredictapiconstructstartbatchpredictionresponsemodelC562F719",
        "cmspredictivemaintenancepredictapiconstructthrottlingrequestsresponseCB5A8D4F",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checks for it in AWS::ApiGateway::Deployment resource"
            }
          ]
        }
      },
      "Properties": {
        "Description": "API to invoke the SageMaker prediction model.",
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        }
      },
      "Type": "AWS::ApiGateway::Deployment"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiDeploymentStageprodFBE2AA0A": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "API_GW_CACHE_ENABLED_AND_ENCRYPTED"
          ]
        }
      },
      "Properties": {
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaApiAccessLogGroup405C3907",
              "Arn"
            ]
          },
          "Format": "{\"requestId\":\"$context.requestId\",\"ip\":\"$context.identity.sourceIp\",\"user\":\"$context.identity.user\",\"caller\":\"$context.identity.caller\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"resourcePath\":\"$context.resourcePath\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
        },
        "DeploymentId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiDeployment32FB8B4B2b65bce80405bad9c3ab291df4753f95"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "MetricsEnabled": true,
            "ResourcePath": "/*"
          }
        ],
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        },
        "StageName": "prod",
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "TracingEnabled": true
      },
      "Type": "AWS::ApiGateway::Stage"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiUsagePlan574C6D11": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
            },
            "Stage": {
              "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiDeploymentStageprodFBE2AA0A"
            },
            "Throttle": {}
          }
        ],
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::ApiGateway::UsagePlan"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApibatchpredictB7E3036E": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3",
            "RootResourceId"
          ]
        },
        "PathPart": "batch-predict",
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        }
      },
      "Type": "AWS::ApiGateway::Resource"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApibatchpredictOPTIONSF5C2BB60": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'POST,GET'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApibatchpredictB7E3036E"
        },
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApibatchpredictPOST260C13B7": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructrestapiauthorizer20AC4B2B"
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "cmspredictivemaintenancepredictapiconstructlambdafunction6EC85F32",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "cmspredictivemaintenancepredictapiconstructstartbatchpredictionresponsemodelC562F719"
              }
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "start-batch-inference",
        "RequestModels": {
          "application/json": {
            "Ref": "cmspredictivemaintenancepredictapiconstructstartbatchpredictionbodymodel517ED113"
          }
        },
        "RequestParameters": {
          "method.request.header.authorization": true
        },
        "RequestValidatorId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructrequestvalidatorF24DD2B8"
        },
        "ResourceId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApibatchpredictB7E3036E"
        },
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApibatchpredictPOSTApiPermissionTestcmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiBBCCD6BDPOSTbatchpredict9CA6001A": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictapiconstructlambdafunction6EC85F32",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
              },
              "/test-invoke-stage/POST/batch-predict"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApibatchpredictPOSTApiPermissioncmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiBBCCD6BDPOSTbatchpredict541306D5": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictapiconstructlambdafunction6EC85F32",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
              },
              "/",
              {
                "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiDeploymentStageprodFBE2AA0A"
              },
              "/POST/batch-predict"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApipredict8C94FC89": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3",
            "RootResourceId"
          ]
        },
        "PathPart": "predict",
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        }
      },
      "Type": "AWS::ApiGateway::Resource"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApipredictOPTIONS96115B2E": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApipredict8C94FC89"
        },
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApipredictPOSTApiPermissionTestcmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiBBCCD6BDPOSTpredict15563456": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictapiconstructlambdafunction6EC85F32",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
              },
              "/test-invoke-stage/POST/predict"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApipredictPOSTApiPermissioncmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiBBCCD6BDPOSTpredict964668FF": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictapiconstructlambdafunction6EC85F32",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
              },
              "/",
              {
                "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApiDeploymentStageprodFBE2AA0A"
              },
              "/POST/predict"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApipredictPOSTEE0899F2": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructrestapiauthorizer20AC4B2B"
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "cmspredictivemaintenancepredictapiconstructlambdafunction6EC85F32",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "cmspredictivemaintenancepredictapiconstructgetpredictionresponsemodel770CAEC1"
              }
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "get-prediction",
        "RequestModels": {
          "application/json": {
            "Ref": "cmspredictivemaintenancepredictapiconstructgetpredictionbodymodel1F0BFB23"
          }
        },
        "RequestParameters": {
          "method.request.header.authorization": true
        },
        "RequestValidatorId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructrequestvalidatorF24DD2B8"
        },
        "ResourceId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApipredict8C94FC89"
        },
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "cmspredictivemaintenancepredictapiconstructbadrequestbodyresponse45601189": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
        },
        "ResponseTemplates": {
          "application/json": "{\"error\":{\"message\":\"$context.error.messageString\",\"errors\":\"$context.error.validationErrorString\"}}"
        },
        "ResponseType": "BAD_REQUEST_BODY",
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        },
        "StatusCode": "400"
      },
      "Type": "AWS::ApiGateway::GatewayResponse"
    },
    "cmspredictivemaintenancepredictapiconstructbadrequestdefaultresponseFD648DA9": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
        },
        "ResponseType": "DEFAULT_4XX",
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        }
      },
      "Type": "AWS::ApiGateway::GatewayResponse"
    },
    "cmspredictivemaintenancepredictapiconstructbadrequestparameterresponseDFD65C6A": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
        },
        "ResponseTemplates": {
          "application/json": "{\"error\":{\"message\":\"$context.error.messageString\",\"errors\":\"$context.error.validationErrorString\"}}"
        },
        "ResponseType": "BAD_REQUEST_PARAMETERS",
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        },
        "StatusCode": "400"
      },
      "Type": "AWS::ApiGateway::GatewayResponse"
    },
    "cmspredictivemaintenancepredictapiconstructgetpredictionbodymodel1F0BFB23": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "ContentType": "application/json",
        "Description": "Invoke the predictive maintenance SageMaker model.",
        "Name": "GetPredictionBodyModel",
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        },
        "Schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "properties": {
            "input": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "Type": "AWS::ApiGateway::Model"
    },
    "cmspredictivemaintenancepredictapiconstructgetpredictionresponsemodel770CAEC1": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "ContentType": "application/json",
        "Description": "Response to invoking the predictive maintenance SageMaker model.",
        "Name": "GetPredictionResponseModel",
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        },
        "Schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "properties": {
            "prediction": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "Type": "AWS::ApiGateway::Model"
    },
    "cmspredictivemaintenancepredictapiconstructinternalservererrordefaultresponse9D491934": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
        },
        "ResponseType": "DEFAULT_5XX",
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        },
        "StatusCode": "500"
      },
      "Type": "AWS::ApiGateway::GatewayResponse"
    },
    "cmspredictivemaintenancepredictapiconstructlambdafunction6EC85F32": {
      "DependsOn": [
        "cmspredictivemaintenancepredictapiconstructlambdaroleDefaultPolicyEBBC491E",
        "cmspredictivemaintenancepredictapiconstructlambdarole2097E32B",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Environment": {
          "Variables": {
            "BATCH_INFERENCE_DATA_OUTPUT_S3_KEY_PREFIX": "inference",
            "BATCH_INFERENCE_DATA_S3_BUCKET_NAME": {
              "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
            },
            "BATCH_INFERENCE_INSTANCE_COUNT": "1",
            "BATCH_INFERENCE_INSTANCE_TYPE": "ml.m5.xlarge",
            "RESOURCE_NAME_SUFFIX": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AppUniqueId"
                  },
                  "-test-module-short-name"
                ]
              ]
            },
            "SAGEMAKER_MODEL_ENDPOINT_NAME": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AppUniqueId"
                  },
                  "-test-module-short-name-endpoint"
                ]
              ]
            },
            "USER_AGENT_STRING": "AWSSOLUTION/test-solution-id/test-solution-version AWSSOLUTION-CAPABILITY/test-capability-id/test-solution-version"
          }
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-predict-api"
            ]
          ]
        },
        "Handler": "function.main.handler",
        "Layers": [
          {
            "Ref": "cmspredictivemaintenancedependencylayerconstructlambdadependencylayerversion4CEC1EF0"
          }
        ],
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictapiconstructlambdarole2097E32B",
            "Arn"
          ]
        },
        "Runtime": "python3.12",
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "cmspredictivemaintenancepredictapiconstructsecuritygroup4BCEC9CE",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/1}}"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/2}}"
                ]
              ]
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Function"
    },
    "cmspredictivemaintenancepredictapiconstructlambdafunctionLogRetentionAE616AF1": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "cmspredictivemaintenancepredictapiconstructlambdafunction6EC85F32"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "cmspredictivemaintenancepredictapiconstructlambdarole2097E32B": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-predict-api"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-predict-api:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "lambda-logs-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "ec2:CreateNetworkInterfacePermission",
                  "Condition": {
                    "StringEquals": {
                      "ec2:AuthorizedService": "lambda.amazonaws.com",
                      "ec2:Subnet": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/1}}"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/2}}"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":ec2:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":network-interface/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:CreateNetworkInterface",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "ec2-policy"
          }
        ],
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmspredictivemaintenancepredictapiconstructlambdaroleDefaultPolicyEBBC491E": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sagemaker:InvokeEndpoint",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":endpoint/",
                    {
                      "Ref": "AppUniqueId"
                    },
                    "-test-module-short-name-endpoint"
                  ]
                ]
              }
            },
            {
              "Action": "sagemaker:CreateTransformJob",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":transform-job/*"
                  ]
                ]
              }
            },
            {
              "Action": "sagemaker:ListModels",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "cmspredictivemaintenancepredictapiconstructlambdaroleDefaultPolicyEBBC491E",
        "Roles": [
          {
            "Ref": "cmspredictivemaintenancepredictapiconstructlambdarole2097E32B"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "cmspredictivemaintenancepredictapiconstructrequestvalidatorF24DD2B8": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-rest-api-request-validator"
            ]
          ]
        },
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        },
        "ValidateRequestBody": true,
        "ValidateRequestParameters": true
      },
      "Type": "AWS::ApiGateway::RequestValidator"
    },
    "cmspredictivemaintenancepredictapiconstructrestapiauthorizer20AC4B2B": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AuthorizerResultTtlInSeconds": 0,
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "cmspredictivemaintenanceauthorizationlambdaconstructlambdafunction4C6F29BC",
                          "Arn"
                        ]
                      }
                    ]
                  }
                ]
              },
              ":apigateway:",
              {
                "Fn::Select": [
                  3,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "cmspredictivemaintenanceauthorizationlambdaconstructlambdafunction4C6F29BC",
                          "Arn"
                        ]
                      }
                    ]
                  }
                ]
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "cmspredictivemaintenanceauthorizationlambdaconstructlambdafunction4C6F29BC",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "IdentitySource": "method.request.header.Authorization",
        "Name": "cmspredictivemaintenancepredictapiconstructrestapiauthorizerC7A00D05",
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        },
        "Type": "REQUEST"
      },
      "Type": "AWS::ApiGateway::Authorizer"
    },
    "cmspredictivemaintenancepredictapiconstructsecuritygroup4BCEC9CE": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "GroupDescription": "Default/cms-predictive-maintenance/cms-predictive-maintenance/predict-api-construct/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Fn::GetAtt": [
                  "moduleinputsconstructvpcnamecustomresource12726E51",
                  "parameter_value"
                ]
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmspredictivemaintenancepredictapiconstructstartbatchpredictionbodymodel517ED113": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "ContentType": "application/json",
        "Description": "Invoke batch inference with the predictive maintenance SageMaker model.",
        "Name": "StartBatchPredictionBodyModel",
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        },
        "Schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "properties": {
            "input_data_s3_key": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "Type": "AWS::ApiGateway::Model"
    },
    "cmspredictivemaintenancepredictapiconstructstartbatchpredictionresponsemodelC562F719": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "ContentType": "application/json",
        "Description": "Response to invoking batch inference on the predictive maintenance SageMaker model.",
        "Name": "StartBatchPredictionResponseModel",
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        },
        "Schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "properties": {
            "transform-job-name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "Type": "AWS::ApiGateway::Model"
    },
    "cmspredictivemaintenancepredictapiconstructthrottlingrequestsresponseCB5A8D4F": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
        },
        "ResponseTemplates": {
          "application/json": "{\"error\":{\"message\":\"$context.error.messageString\",\"errors\":\"$context.error.validationErrorString\"}}"
        },
        "ResponseType": "THROTTLED",
        "RestApiId": {
          "Ref": "cmspredictivemaintenancepredictapiconstructapigatewaytolambdaLambdaRestApi086E4DB3"
        },
        "StatusCode": "429"
      },
      "Type": "AWS::ApiGateway::GatewayResponse"
    },
    "cmspredictivemaintenancepredictorconstructsagemakerpipeline67D87A68": {
      "DependsOn": [
        "cmspredictivemaintenancepredictorconstructsagemakerpipelinecreateanduploadsagemakerpipelinedefinitioncustomresourceD60049D9",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "PipelineDefinition": {
          "PipelineDefinitionS3Location": {
            "Bucket": {
              "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
            },
            "Key": "pipelines/predictive-maintenance-pipeline.json"
          }
        },
        "PipelineName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-pipeline"
            ]
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictorconstructsagemakerpipelineroleDC833CE2",
            "Arn"
          ]
        },
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::SageMaker::Pipeline"
    },
    "cmspredictivemaintenancepredictorconstructsagemakerpipelinecreateanduploadsagemakerpipelinedefinitioncustomresourceD60049D9": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "PipelineAssetsBucketName": {
          "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
        },
        "PipelineDefinitionS3Key": "pipelines/predictive-maintenance-pipeline.json",
        "PipelineDeployModelLambdaArn": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictorconstructsagemakerpipelinedeploypipelinemodellambdafunctionDB90CD10",
            "Arn"
          ]
        },
        "PipelineName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-pipeline"
            ]
          ]
        },
        "PipelineRoleArn": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictorconstructsagemakerpipelineroleDC833CE2",
            "Arn"
          ]
        },
        "Resource": "CreateAndUploadSageMakerPipelineDefinition",
        "ResourceNameSuffix": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name"
            ]
          ]
        },
        "SageMakerModelEndpointName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-endpoint"
            ]
          ]
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancecustomresourcelambdaconstructlambdafunctionE0665B5E",
            "Arn"
          ]
        }
      },
      "Type": "Custom::CreateAndUploadSageMakerPipelineDefinition",
      "UpdateReplacePolicy": "Delete"
    },
    "cmspredictivemaintenancepredictorconstructsagemakerpipelinecustomresourcepolicy02ADF98C": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::",
                    {
                      "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
                    },
                    "/pipelines/predictive-maintenance-pipeline.json"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:ListBucket",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "cmspredictivemaintenancepredictorconstructsagemakerpipelinecustomresourcepolicy02ADF98C",
        "Roles": [
          {
            "Ref": "cmspredictivemaintenancecustomresourcelambdaconstructlambdarole5C24959F"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "cmspredictivemaintenancepredictorconstructsagemakerpipelinedeploypipelinemodellambdafunctionDB90CD10": {
      "DependsOn": [
        "cmspredictivemaintenancepredictorconstructsagemakerpipelinedeploypipelinemodellambdaroleAE3709D8",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "str"
        },
        "Environment": {
          "Variables": {
            "USER_AGENT_STRING": "AWSSOLUTION/test-solution-id/test-solution-version AWSSOLUTION-CAPABILITY/test-capability-id/test-solution-version"
          }
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-deploy-pipeline-model"
            ]
          ]
        },
        "Handler": "function.main.handler",
        "Layers": [
          {
            "Ref": "cmspredictivemaintenancedependencylayerconstructlambdadependencylayerversion4CEC1EF0"
          }
        ],
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictorconstructsagemakerpipelinedeploypipelinemodellambdaroleAE3709D8",
            "Arn"
          ]
        },
        "Runtime": "python3.12",
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "cmspredictivemaintenancepredictorconstructsagemakerpipelinesecuritygroup84C19A85",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/1}}"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/vpc/",
                  {
                    "Fn::GetAtt": [
                      "moduleinputsconstructvpcnamecustomresource12726E51",
                      "parameter_value"
                    ]
                  },
                  "/subnets/private/2}}"
                ]
              ]
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Function"
    },
    "cmspredictivemaintenancepredictorconstructsagemakerpipelinedeploypipelinemodellambdafunctionInvokeew5F4PlPzT1RwKCZKzcvLyf8BxHcpAitjLXBNdvt22kE1D12BEC": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictorconstructsagemakerpipelinedeploypipelinemodellambdafunctionDB90CD10",
            "Arn"
          ]
        },
        "Principal": "sagemaker.amazonaws.com"
      },
      "Type": "AWS::Lambda::Permission"
    },
    "cmspredictivemaintenancepredictorconstructsagemakerpipelinedeploypipelinemodellambdafunctionLogRetentionED6E7BD8": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "cmspredictivemaintenancepredictorconstructsagemakerpipelinedeploypipelinemodellambdafunctionDB90CD10"
              }
            ]
          ]
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        }
      },
      "Type": "Custom::LogRetention"
    },
    "cmspredictivemaintenancepredictorconstructsagemakerpipelinedeploypipelinemodellambdaroleAE3709D8": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-deploy-pipeline-model"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/lambda/",
                          {
                            "Ref": "AppUniqueId"
                          },
                          "-test-module-short-name-deploy-pipeline-model:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "lambda-logs-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "ec2:CreateNetworkInterfacePermission",
                  "Condition": {
                    "StringEquals": {
                      "ec2:AuthorizedService": "lambda.amazonaws.com",
                      "ec2:Subnet": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/1}}"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":ec2:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":subnet/{{resolve:ssm:/solution/vpc/",
                              {
                                "Fn::GetAtt": [
                                  "moduleinputsconstructvpcnamecustomresource12726E51",
                                  "parameter_value"
                                ]
                              },
                              "/subnets/private/2}}"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":ec2:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":network-interface/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": [
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:CreateNetworkInterface",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "ec2-policy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "sagemaker:ListModelPackages",
                    "sagemaker:CreateModel",
                    "sagemaker:CreateEndpointConfig",
                    "sagemaker:CreateEndpoint",
                    "sagemaker:UpdateEndpoint"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "sagemaker"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Condition": {
                    "StringEquals": {
                      "iam:PassedToService": "sagemaker.amazonaws.com"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":role/",
                        {
                          "Ref": "AppUniqueId"
                        },
                        "-test-module-short-name-pipeline-role-",
                        {
                          "Ref": "AWS::Region"
                        }
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "iam"
          }
        ],
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmspredictivemaintenancepredictorconstructsagemakerpipelineroleDC833CE2": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sagemaker.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sagemaker:*",
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "sagemaker"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "s3:ListBucket",
                    "s3:GetObject",
                    "s3:PutObject"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":s3:::",
                          {
                            "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
                          }
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":s3:::",
                          {
                            "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "s3"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "iam:PassRole",
                  "Condition": {
                    "StringEquals": {
                      "iam:PassedToService": "sagemaker.amazonaws.com"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":role/",
                        {
                          "Ref": "AppUniqueId"
                        },
                        "-test-module-short-name-pipeline-role-",
                        {
                          "Ref": "AWS::Region"
                        }
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "iam"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogDelivery",
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DeleteLogDelivery",
                    "logs:Describe*",
                    "logs:GetLogDelivery",
                    "logs:GetLogEvents",
                    "logs:ListLogDeliveries",
                    "logs:PutLogEvents",
                    "logs:PutResourcePolicy",
                    "logs:UpdateLogDelivery"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "cmspredictivemaintenancepredictorconstructsagemakerpipelinedeploypipelinemodellambdafunctionDB90CD10",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "lambda"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ecr:BatchCheckLayerAvailability",
                    "ecr:BatchGetImage",
                    "ecr:DescribeImages",
                    "ecr:GetAuthorizationToken",
                    "ecr:GetDownloadUrlForLayer"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "ecr"
          }
        ],
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-pipeline-role-",
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmspredictivemaintenancepredictorconstructsagemakerpipelinesecuritygroup84C19A85": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "GroupDescription": "Default/cms-predictive-maintenance/cms-predictive-maintenance/predictor-construct/sagemaker-pipeline/security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Fn::GetAtt": [
                  "moduleinputsconstructvpcnamecustomresource12726E51",
                  "parameter_value"
                ]
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "cmspredictivemaintenancepredictorconstructsagemakerstudiocmkkeyCE2F1079": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain"
    },
    "cmspredictivemaintenancepredictorconstructsagemakerstudiocustomresourcepolicyA0987818": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "elasticfilesystem:DeleteFileSystem",
                "elasticfilesystem:DescribeMountTargets",
                "elasticfilesystem:DescribeMountTargetSecurityGroups",
                "elasticfilesystem:DeleteMountTarget"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":elasticfilesystem:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":file-system/",
                    {
                      "Fn::GetAtt": [
                        "cmspredictivemaintenancepredictorconstructsagemakerstudiosagemakerdomain969A118A",
                        "HomeEfsFileSystemId"
                      ]
                    }
                  ]
                ]
              }
            },
            {
              "Action": [
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeSecurityGroups",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:RevokeSecurityGroupIngress"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "cmspredictivemaintenancepredictorconstructsagemakerstudiocustomresourcepolicyA0987818",
        "Roles": [
          {
            "Ref": "cmspredictivemaintenancecustomresourcelambdaconstructlambdarole5C24959F"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "cmspredictivemaintenancepredictorconstructsagemakerstudiodeletesagemakerdomainefscustomresourceA15FB129": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "cmspredictivemaintenancepredictorconstructsagemakerstudiocustomresourcepolicyA0987818",
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "HomeEfsFileSystemId": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictorconstructsagemakerstudiosagemakerdomain969A118A",
            "HomeEfsFileSystemId"
          ]
        },
        "Resource": "DeleteSageMakerDomainEfs",
        "ServiceToken": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancecustomresourcelambdaconstructlambdafunctionE0665B5E",
            "Arn"
          ]
        }
      },
      "Type": "Custom::DeleteSageMakerDomainEfs",
      "UpdateReplacePolicy": "Delete"
    },
    "cmspredictivemaintenancepredictorconstructsagemakerstudioroleD3EA4249": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sagemaker.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "SageMaker Domain Role",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sagemaker:*",
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "sagemaker"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogStreams",
                    "logs:GetLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/sagemaker/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":log-group:/aws/sagemaker/*:log-stream:*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudwatch"
          }
        ],
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "cmspredictivemaintenancepredictorconstructsagemakerstudiosagemakeradminuserprofile8E00099C": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "DomainId": {
          "Fn::GetAtt": [
            "cmspredictivemaintenancepredictorconstructsagemakerstudiosagemakerdomain969A118A",
            "DomainId"
          ]
        },
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "UserProfileName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-admin"
            ]
          ]
        }
      },
      "Type": "AWS::SageMaker::UserProfile"
    },
    "cmspredictivemaintenancepredictorconstructsagemakerstudiosagemakerdomain969A118A": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AuthMode": "IAM",
        "DefaultUserSettings": {
          "ExecutionRole": {
            "Fn::GetAtt": [
              "cmspredictivemaintenancepredictorconstructsagemakerstudioroleD3EA4249",
              "Arn"
            ]
          }
        },
        "DomainName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppUniqueId"
              },
              "-test-module-short-name-studio"
            ]
          ]
        },
        "KmsKeyId": {
          "Ref": "cmspredictivemaintenancepredictorconstructsagemakerstudiocmkkeyCE2F1079"
        },
        "SubnetIds": [
          {
            "Fn::Join": [
              "",
              [
                "{{resolve:ssm:/solution/vpc/",
                {
                  "Fn::GetAtt": [
                    "moduleinputsconstructvpcnamecustomresource12726E51",
                    "parameter_value"
                  ]
                },
                "/subnets/private/1}}"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "{{resolve:ssm:/solution/vpc/",
                {
                  "Fn::GetAtt": [
                    "moduleinputsconstructvpcnamecustomresource12726E51",
                    "parameter_value"
                  ]
                },
                "/subnets/private/2}}"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/vpc/",
              {
                "Fn::GetAtt": [
                  "moduleinputsconstructvpcnamecustomresource12726E51",
                  "parameter_value"
                ]
              },
              "/vpcid}}"
            ]
          ]
        }
      },
      "Type": "AWS::SageMaker::Domain"
    },
    "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructlogbucketB2F96BDD"
          }
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain"
    },
    "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucketPolicy6C1C1A2F": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Bucket": {
          "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "cmspredictivemaintenancesagemakerassetsbucketconstructencryptedbucket8260F56D",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Type": "AWS::S3::BucketPolicy"
    },
    "cmspredictivemaintenancesagemakerassetsbucketconstructlogbucketB2F96BDD": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "AbortIncompleteMultipartUpload": {
                "DaysAfterInitiation": 1
              },
              "ExpirationInDays": {
                "Ref": "S3LogExpirationDays"
              },
              "Id": "expire-current-version-and-delete-old-objects",
              "NoncurrentVersionExpirationInDays": {
                "Ref": "S3LogNoncurrentVersionExpirationDays"
              },
              "Status": "Enabled"
            }
          ]
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter"
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [
          {
            "Key": "Solutions:DeploymentUUID",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:ssm:/solution/",
                  {
                    "Ref": "AppUniqueId"
                  },
                  "/config/deployment-uuid}}"
                ]
              ]
            }
          }
        ],
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain"
    },
    "cmspredictivemaintenancesagemakerassetsbucketconstructlogbucketPolicy6C822ADC": {
      "DependsOn": [
        "ssmappuniqueidregistermodule9C5C2C5D"
      ],
      "Properties": {
        "Bucket": {
          "Ref": "cmspredictivemaintenancesagemakerassetsbucketconstructlogbucketB2F96BDD"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "cmspredictivemaintenancesagemakerassetsbucketconstructlogbucketB2F96BDD",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "cmspredictivemaintenancesagemakerassetsbucketconstructlogbucketB2F96BDD",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Type": "AWS::S3::BucketPolicy"
    },
    "moduleinputsconstructvpcnamecustomresource12726E51": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ParameterName": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/config/vpc/name"
            ]
          ]
        },
        "Resource": "SsmParameters",
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/config/aws-resource-lookup-lambda/arn}}"
            ]
          ]
        }
      },
      "Type": "Custom::SsmParameters",
      "UpdateReplacePolicy": "Delete"
    },
    "ssmappuniqueidregistermodule9C5C2C5D": {
      "Properties": {
        "Description": "SSM parameter to register a module with an app unique ID.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "/test-module-short-name"
            ]
          ]
        },
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "{{resolve:ssm:/solution/",
              {
                "Ref": "AppUniqueId"
              },
              "}}"
            ]
          ]
        }
      },
      "Type": "AWS::SSM::Parameter"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}
